/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 223.0, "minX": 0.0, "maxY": 28795.0, "series": [{"data": [[0.0, 470.0], [0.1, 478.0], [0.2, 479.0], [0.3, 481.0], [0.4, 481.0], [0.5, 482.0], [0.6, 483.0], [0.7, 484.0], [0.8, 484.0], [0.9, 485.0], [1.0, 485.0], [1.1, 486.0], [1.2, 486.0], [1.3, 487.0], [1.4, 487.0], [1.5, 488.0], [1.6, 488.0], [1.7, 488.0], [1.8, 488.0], [1.9, 489.0], [2.0, 489.0], [2.1, 489.0], [2.2, 490.0], [2.3, 490.0], [2.4, 490.0], [2.5, 490.0], [2.6, 491.0], [2.7, 491.0], [2.8, 491.0], [2.9, 492.0], [3.0, 492.0], [3.1, 492.0], [3.2, 492.0], [3.3, 492.0], [3.4, 493.0], [3.5, 493.0], [3.6, 493.0], [3.7, 493.0], [3.8, 494.0], [3.9, 494.0], [4.0, 494.0], [4.1, 494.0], [4.2, 494.0], [4.3, 495.0], [4.4, 495.0], [4.5, 495.0], [4.6, 495.0], [4.7, 496.0], [4.8, 496.0], [4.9, 496.0], [5.0, 497.0], [5.1, 497.0], [5.2, 497.0], [5.3, 497.0], [5.4, 498.0], [5.5, 498.0], [5.6, 498.0], [5.7, 498.0], [5.8, 499.0], [5.9, 499.0], [6.0, 499.0], [6.1, 499.0], [6.2, 500.0], [6.3, 500.0], [6.4, 500.0], [6.5, 501.0], [6.6, 501.0], [6.7, 501.0], [6.8, 501.0], [6.9, 502.0], [7.0, 502.0], [7.1, 503.0], [7.2, 503.0], [7.3, 503.0], [7.4, 504.0], [7.5, 504.0], [7.6, 504.0], [7.7, 505.0], [7.8, 505.0], [7.9, 505.0], [8.0, 506.0], [8.1, 506.0], [8.2, 506.0], [8.3, 507.0], [8.4, 508.0], [8.5, 508.0], [8.6, 508.0], [8.7, 509.0], [8.8, 509.0], [8.9, 510.0], [9.0, 510.0], [9.1, 511.0], [9.2, 512.0], [9.3, 512.0], [9.4, 513.0], [9.5, 514.0], [9.6, 514.0], [9.7, 515.0], [9.8, 515.0], [9.9, 516.0], [10.0, 517.0], [10.1, 517.0], [10.2, 518.0], [10.3, 519.0], [10.4, 520.0], [10.5, 520.0], [10.6, 521.0], [10.7, 522.0], [10.8, 523.0], [10.9, 524.0], [11.0, 524.0], [11.1, 525.0], [11.2, 526.0], [11.3, 527.0], [11.4, 528.0], [11.5, 529.0], [11.6, 529.0], [11.7, 530.0], [11.8, 531.0], [11.9, 531.0], [12.0, 532.0], [12.1, 533.0], [12.2, 534.0], [12.3, 534.0], [12.4, 535.0], [12.5, 536.0], [12.6, 536.0], [12.7, 537.0], [12.8, 538.0], [12.9, 539.0], [13.0, 539.0], [13.1, 540.0], [13.2, 541.0], [13.3, 541.0], [13.4, 542.0], [13.5, 543.0], [13.6, 544.0], [13.7, 544.0], [13.8, 545.0], [13.9, 546.0], [14.0, 547.0], [14.1, 548.0], [14.2, 549.0], [14.3, 549.0], [14.4, 550.0], [14.5, 552.0], [14.6, 553.0], [14.7, 553.0], [14.8, 554.0], [14.9, 555.0], [15.0, 556.0], [15.1, 557.0], [15.2, 558.0], [15.3, 560.0], [15.4, 561.0], [15.5, 562.0], [15.6, 563.0], [15.7, 565.0], [15.8, 566.0], [15.9, 567.0], [16.0, 568.0], [16.1, 569.0], [16.2, 571.0], [16.3, 573.0], [16.4, 574.0], [16.5, 575.0], [16.6, 576.0], [16.7, 577.0], [16.8, 579.0], [16.9, 580.0], [17.0, 582.0], [17.1, 583.0], [17.2, 585.0], [17.3, 586.0], [17.4, 587.0], [17.5, 588.0], [17.6, 590.0], [17.7, 592.0], [17.8, 594.0], [17.9, 596.0], [18.0, 598.0], [18.1, 600.0], [18.2, 602.0], [18.3, 605.0], [18.4, 606.0], [18.5, 607.0], [18.6, 610.0], [18.7, 611.0], [18.8, 612.0], [18.9, 615.0], [19.0, 617.0], [19.1, 619.0], [19.2, 621.0], [19.3, 623.0], [19.4, 625.0], [19.5, 628.0], [19.6, 630.0], [19.7, 632.0], [19.8, 634.0], [19.9, 635.0], [20.0, 637.0], [20.1, 639.0], [20.2, 641.0], [20.3, 645.0], [20.4, 647.0], [20.5, 650.0], [20.6, 652.0], [20.7, 655.0], [20.8, 657.0], [20.9, 660.0], [21.0, 663.0], [21.1, 665.0], [21.2, 668.0], [21.3, 671.0], [21.4, 674.0], [21.5, 678.0], [21.6, 681.0], [21.7, 683.0], [21.8, 686.0], [21.9, 688.0], [22.0, 691.0], [22.1, 693.0], [22.2, 695.0], [22.3, 698.0], [22.4, 700.0], [22.5, 703.0], [22.6, 706.0], [22.7, 708.0], [22.8, 711.0], [22.9, 715.0], [23.0, 718.0], [23.1, 723.0], [23.2, 726.0], [23.3, 730.0], [23.4, 735.0], [23.5, 738.0], [23.6, 743.0], [23.7, 747.0], [23.8, 749.0], [23.9, 753.0], [24.0, 758.0], [24.1, 762.0], [24.2, 767.0], [24.3, 770.0], [24.4, 775.0], [24.5, 781.0], [24.6, 786.0], [24.7, 791.0], [24.8, 795.0], [24.9, 801.0], [25.0, 804.0], [25.1, 811.0], [25.2, 814.0], [25.3, 819.0], [25.4, 823.0], [25.5, 829.0], [25.6, 834.0], [25.7, 842.0], [25.8, 847.0], [25.9, 851.0], [26.0, 857.0], [26.1, 863.0], [26.2, 868.0], [26.3, 873.0], [26.4, 879.0], [26.5, 884.0], [26.6, 891.0], [26.7, 901.0], [26.8, 906.0], [26.9, 912.0], [27.0, 918.0], [27.1, 927.0], [27.2, 935.0], [27.3, 942.0], [27.4, 949.0], [27.5, 958.0], [27.6, 963.0], [27.7, 971.0], [27.8, 978.0], [27.9, 981.0], [28.0, 986.0], [28.1, 990.0], [28.2, 1001.0], [28.3, 1007.0], [28.4, 1013.0], [28.5, 1019.0], [28.6, 1028.0], [28.7, 1036.0], [28.8, 1049.0], [28.9, 1056.0], [29.0, 1063.0], [29.1, 1073.0], [29.2, 1081.0], [29.3, 1089.0], [29.4, 1100.0], [29.5, 1109.0], [29.6, 1117.0], [29.7, 1127.0], [29.8, 1135.0], [29.9, 1144.0], [30.0, 1150.0], [30.1, 1156.0], [30.2, 1165.0], [30.3, 1171.0], [30.4, 1180.0], [30.5, 1188.0], [30.6, 1195.0], [30.7, 1203.0], [30.8, 1213.0], [30.9, 1220.0], [31.0, 1226.0], [31.1, 1232.0], [31.2, 1240.0], [31.3, 1247.0], [31.4, 1255.0], [31.5, 1259.0], [31.6, 1265.0], [31.7, 1271.0], [31.8, 1278.0], [31.9, 1288.0], [32.0, 1294.0], [32.1, 1302.0], [32.2, 1308.0], [32.3, 1314.0], [32.4, 1320.0], [32.5, 1325.0], [32.6, 1334.0], [32.7, 1339.0], [32.8, 1344.0], [32.9, 1357.0], [33.0, 1365.0], [33.1, 1374.0], [33.2, 1380.0], [33.3, 1389.0], [33.4, 1396.0], [33.5, 1405.0], [33.6, 1411.0], [33.7, 1417.0], [33.8, 1427.0], [33.9, 1434.0], [34.0, 1444.0], [34.1, 1453.0], [34.2, 1461.0], [34.3, 1475.0], [34.4, 1485.0], [34.5, 1493.0], [34.6, 1497.0], [34.7, 1500.0], [34.8, 1508.0], [34.9, 1514.0], [35.0, 1519.0], [35.1, 1523.0], [35.2, 1528.0], [35.3, 1533.0], [35.4, 1539.0], [35.5, 1544.0], [35.6, 1548.0], [35.7, 1556.0], [35.8, 1560.0], [35.9, 1565.0], [36.0, 1570.0], [36.1, 1576.0], [36.2, 1585.0], [36.3, 1590.0], [36.4, 1595.0], [36.5, 1600.0], [36.6, 1605.0], [36.7, 1609.0], [36.8, 1617.0], [36.9, 1622.0], [37.0, 1628.0], [37.1, 1637.0], [37.2, 1642.0], [37.3, 1647.0], [37.4, 1654.0], [37.5, 1660.0], [37.6, 1664.0], [37.7, 1670.0], [37.8, 1674.0], [37.9, 1679.0], [38.0, 1683.0], [38.1, 1689.0], [38.2, 1694.0], [38.3, 1700.0], [38.4, 1703.0], [38.5, 1707.0], [38.6, 1714.0], [38.7, 1721.0], [38.8, 1730.0], [38.9, 1738.0], [39.0, 1747.0], [39.1, 1754.0], [39.2, 1760.0], [39.3, 1767.0], [39.4, 1777.0], [39.5, 1784.0], [39.6, 1794.0], [39.7, 1801.0], [39.8, 1808.0], [39.9, 1818.0], [40.0, 1824.0], [40.1, 1832.0], [40.2, 1839.0], [40.3, 1847.0], [40.4, 1853.0], [40.5, 1862.0], [40.6, 1867.0], [40.7, 1876.0], [40.8, 1883.0], [40.9, 1891.0], [41.0, 1899.0], [41.1, 1906.0], [41.2, 1913.0], [41.3, 1926.0], [41.4, 1932.0], [41.5, 1944.0], [41.6, 1950.0], [41.7, 1964.0], [41.8, 1974.0], [41.9, 1982.0], [42.0, 1993.0], [42.1, 2001.0], [42.2, 2010.0], [42.3, 2016.0], [42.4, 2029.0], [42.5, 2038.0], [42.6, 2045.0], [42.7, 2054.0], [42.8, 2064.0], [42.9, 2074.0], [43.0, 2080.0], [43.1, 2087.0], [43.2, 2098.0], [43.3, 2107.0], [43.4, 2119.0], [43.5, 2127.0], [43.6, 2139.0], [43.7, 2146.0], [43.8, 2154.0], [43.9, 2169.0], [44.0, 2179.0], [44.1, 2188.0], [44.2, 2197.0], [44.3, 2205.0], [44.4, 2214.0], [44.5, 2222.0], [44.6, 2229.0], [44.7, 2235.0], [44.8, 2243.0], [44.9, 2246.0], [45.0, 2253.0], [45.1, 2260.0], [45.2, 2264.0], [45.3, 2268.0], [45.4, 2272.0], [45.5, 2279.0], [45.6, 2287.0], [45.7, 2291.0], [45.8, 2297.0], [45.9, 2303.0], [46.0, 2309.0], [46.1, 2315.0], [46.2, 2319.0], [46.3, 2324.0], [46.4, 2331.0], [46.5, 2337.0], [46.6, 2343.0], [46.7, 2348.0], [46.8, 2353.0], [46.9, 2358.0], [47.0, 2361.0], [47.1, 2368.0], [47.2, 2373.0], [47.3, 2379.0], [47.4, 2384.0], [47.5, 2388.0], [47.6, 2394.0], [47.7, 2401.0], [47.8, 2405.0], [47.9, 2411.0], [48.0, 2419.0], [48.1, 2422.0], [48.2, 2427.0], [48.3, 2432.0], [48.4, 2438.0], [48.5, 2449.0], [48.6, 2453.0], [48.7, 2457.0], [48.8, 2464.0], [48.9, 2469.0], [49.0, 2473.0], [49.1, 2478.0], [49.2, 2485.0], [49.3, 2492.0], [49.4, 2500.0], [49.5, 2505.0], [49.6, 2510.0], [49.7, 2514.0], [49.8, 2522.0], [49.9, 2528.0], [50.0, 2535.0], [50.1, 2543.0], [50.2, 2550.0], [50.3, 2556.0], [50.4, 2564.0], [50.5, 2570.0], [50.6, 2576.0], [50.7, 2582.0], [50.8, 2588.0], [50.9, 2593.0], [51.0, 2600.0], [51.1, 2604.0], [51.2, 2612.0], [51.3, 2621.0], [51.4, 2628.0], [51.5, 2635.0], [51.6, 2641.0], [51.7, 2646.0], [51.8, 2654.0], [51.9, 2663.0], [52.0, 2668.0], [52.1, 2675.0], [52.2, 2682.0], [52.3, 2691.0], [52.4, 2699.0], [52.5, 2706.0], [52.6, 2717.0], [52.7, 2723.0], [52.8, 2733.0], [52.9, 2741.0], [53.0, 2746.0], [53.1, 2755.0], [53.2, 2765.0], [53.3, 2772.0], [53.4, 2777.0], [53.5, 2782.0], [53.6, 2788.0], [53.7, 2794.0], [53.8, 2802.0], [53.9, 2814.0], [54.0, 2823.0], [54.1, 2829.0], [54.2, 2834.0], [54.3, 2839.0], [54.4, 2847.0], [54.5, 2853.0], [54.6, 2857.0], [54.7, 2863.0], [54.8, 2870.0], [54.9, 2877.0], [55.0, 2882.0], [55.1, 2889.0], [55.2, 2896.0], [55.3, 2902.0], [55.4, 2908.0], [55.5, 2915.0], [55.6, 2929.0], [55.7, 2933.0], [55.8, 2939.0], [55.9, 2949.0], [56.0, 2958.0], [56.1, 2965.0], [56.2, 2973.0], [56.3, 2978.0], [56.4, 2989.0], [56.5, 2996.0], [56.6, 3003.0], [56.7, 3008.0], [56.8, 3014.0], [56.9, 3022.0], [57.0, 3028.0], [57.1, 3034.0], [57.2, 3037.0], [57.3, 3043.0], [57.4, 3047.0], [57.5, 3053.0], [57.6, 3061.0], [57.7, 3069.0], [57.8, 3075.0], [57.9, 3083.0], [58.0, 3089.0], [58.1, 3093.0], [58.2, 3100.0], [58.3, 3107.0], [58.4, 3114.0], [58.5, 3119.0], [58.6, 3123.0], [58.7, 3129.0], [58.8, 3134.0], [58.9, 3140.0], [59.0, 3147.0], [59.1, 3157.0], [59.2, 3162.0], [59.3, 3170.0], [59.4, 3177.0], [59.5, 3183.0], [59.6, 3193.0], [59.7, 3199.0], [59.8, 3204.0], [59.9, 3208.0], [60.0, 3218.0], [60.1, 3224.0], [60.2, 3233.0], [60.3, 3241.0], [60.4, 3247.0], [60.5, 3255.0], [60.6, 3262.0], [60.7, 3267.0], [60.8, 3275.0], [60.9, 3286.0], [61.0, 3294.0], [61.1, 3300.0], [61.2, 3307.0], [61.3, 3315.0], [61.4, 3323.0], [61.5, 3331.0], [61.6, 3339.0], [61.7, 3348.0], [61.8, 3355.0], [61.9, 3362.0], [62.0, 3368.0], [62.1, 3374.0], [62.2, 3383.0], [62.3, 3388.0], [62.4, 3396.0], [62.5, 3405.0], [62.6, 3413.0], [62.7, 3422.0], [62.8, 3433.0], [62.9, 3442.0], [63.0, 3451.0], [63.1, 3461.0], [63.2, 3474.0], [63.3, 3482.0], [63.4, 3492.0], [63.5, 3498.0], [63.6, 3503.0], [63.7, 3510.0], [63.8, 3518.0], [63.9, 3525.0], [64.0, 3531.0], [64.1, 3538.0], [64.2, 3544.0], [64.3, 3550.0], [64.4, 3560.0], [64.5, 3566.0], [64.6, 3574.0], [64.7, 3583.0], [64.8, 3588.0], [64.9, 3597.0], [65.0, 3608.0], [65.1, 3620.0], [65.2, 3625.0], [65.3, 3636.0], [65.4, 3651.0], [65.5, 3659.0], [65.6, 3669.0], [65.7, 3676.0], [65.8, 3682.0], [65.9, 3688.0], [66.0, 3695.0], [66.1, 3705.0], [66.2, 3713.0], [66.3, 3717.0], [66.4, 3726.0], [66.5, 3734.0], [66.6, 3740.0], [66.7, 3748.0], [66.8, 3755.0], [66.9, 3765.0], [67.0, 3770.0], [67.1, 3774.0], [67.2, 3781.0], [67.3, 3787.0], [67.4, 3796.0], [67.5, 3806.0], [67.6, 3817.0], [67.7, 3825.0], [67.8, 3833.0], [67.9, 3839.0], [68.0, 3847.0], [68.1, 3858.0], [68.2, 3864.0], [68.3, 3873.0], [68.4, 3884.0], [68.5, 3890.0], [68.6, 3896.0], [68.7, 3905.0], [68.8, 3914.0], [68.9, 3924.0], [69.0, 3939.0], [69.1, 3945.0], [69.2, 3955.0], [69.3, 3962.0], [69.4, 3972.0], [69.5, 3981.0], [69.6, 3985.0], [69.7, 3995.0], [69.8, 4004.0], [69.9, 4015.0], [70.0, 4020.0], [70.1, 4025.0], [70.2, 4032.0], [70.3, 4041.0], [70.4, 4049.0], [70.5, 4060.0], [70.6, 4072.0], [70.7, 4079.0], [70.8, 4086.0], [70.9, 4092.0], [71.0, 4099.0], [71.1, 4111.0], [71.2, 4117.0], [71.3, 4125.0], [71.4, 4130.0], [71.5, 4140.0], [71.6, 4150.0], [71.7, 4162.0], [71.8, 4171.0], [71.9, 4181.0], [72.0, 4190.0], [72.1, 4201.0], [72.2, 4212.0], [72.3, 4218.0], [72.4, 4230.0], [72.5, 4242.0], [72.6, 4259.0], [72.7, 4271.0], [72.8, 4279.0], [72.9, 4298.0], [73.0, 4307.0], [73.1, 4314.0], [73.2, 4324.0], [73.3, 4336.0], [73.4, 4346.0], [73.5, 4357.0], [73.6, 4364.0], [73.7, 4375.0], [73.8, 4388.0], [73.9, 4400.0], [74.0, 4414.0], [74.1, 4431.0], [74.2, 4443.0], [74.3, 4459.0], [74.4, 4471.0], [74.5, 4487.0], [74.6, 4501.0], [74.7, 4517.0], [74.8, 4528.0], [74.9, 4539.0], [75.0, 4552.0], [75.1, 4562.0], [75.2, 4571.0], [75.3, 4581.0], [75.4, 4592.0], [75.5, 4605.0], [75.6, 4614.0], [75.7, 4633.0], [75.8, 4645.0], [75.9, 4659.0], [76.0, 4669.0], [76.1, 4679.0], [76.2, 4694.0], [76.3, 4707.0], [76.4, 4725.0], [76.5, 4734.0], [76.6, 4746.0], [76.7, 4758.0], [76.8, 4770.0], [76.9, 4780.0], [77.0, 4792.0], [77.1, 4803.0], [77.2, 4819.0], [77.3, 4830.0], [77.4, 4839.0], [77.5, 4851.0], [77.6, 4860.0], [77.7, 4874.0], [77.8, 4885.0], [77.9, 4894.0], [78.0, 4915.0], [78.1, 4925.0], [78.2, 4937.0], [78.3, 4948.0], [78.4, 4960.0], [78.5, 4971.0], [78.6, 4984.0], [78.7, 4996.0], [78.8, 5007.0], [78.9, 5025.0], [79.0, 5040.0], [79.1, 5052.0], [79.2, 5066.0], [79.3, 5079.0], [79.4, 5087.0], [79.5, 5104.0], [79.6, 5113.0], [79.7, 5127.0], [79.8, 5141.0], [79.9, 5165.0], [80.0, 5189.0], [80.1, 5207.0], [80.2, 5239.0], [80.3, 5268.0], [80.4, 5290.0], [80.5, 5316.0], [80.6, 5343.0], [80.7, 5354.0], [80.8, 5369.0], [80.9, 5382.0], [81.0, 5401.0], [81.1, 5411.0], [81.2, 5422.0], [81.3, 5429.0], [81.4, 5451.0], [81.5, 5466.0], [81.6, 5479.0], [81.7, 5494.0], [81.8, 5507.0], [81.9, 5519.0], [82.0, 5528.0], [82.1, 5542.0], [82.2, 5553.0], [82.3, 5563.0], [82.4, 5575.0], [82.5, 5587.0], [82.6, 5601.0], [82.7, 5610.0], [82.8, 5625.0], [82.9, 5641.0], [83.0, 5655.0], [83.1, 5672.0], [83.2, 5682.0], [83.3, 5694.0], [83.4, 5709.0], [83.5, 5716.0], [83.6, 5726.0], [83.7, 5735.0], [83.8, 5750.0], [83.9, 5760.0], [84.0, 5767.0], [84.1, 5775.0], [84.2, 5785.0], [84.3, 5798.0], [84.4, 5807.0], [84.5, 5820.0], [84.6, 5833.0], [84.7, 5846.0], [84.8, 5859.0], [84.9, 5875.0], [85.0, 5887.0], [85.1, 5907.0], [85.2, 5931.0], [85.3, 5944.0], [85.4, 5960.0], [85.5, 5978.0], [85.6, 5998.0], [85.7, 6019.0], [85.8, 6038.0], [85.9, 6053.0], [86.0, 6065.0], [86.1, 6074.0], [86.2, 6088.0], [86.3, 6105.0], [86.4, 6121.0], [86.5, 6133.0], [86.6, 6146.0], [86.7, 6160.0], [86.8, 6178.0], [86.9, 6191.0], [87.0, 6203.0], [87.1, 6216.0], [87.2, 6233.0], [87.3, 6244.0], [87.4, 6253.0], [87.5, 6267.0], [87.6, 6282.0], [87.7, 6297.0], [87.8, 6320.0], [87.9, 6337.0], [88.0, 6359.0], [88.1, 6372.0], [88.2, 6384.0], [88.3, 6403.0], [88.4, 6416.0], [88.5, 6430.0], [88.6, 6444.0], [88.7, 6456.0], [88.8, 6468.0], [88.9, 6483.0], [89.0, 6492.0], [89.1, 6506.0], [89.2, 6518.0], [89.3, 6525.0], [89.4, 6549.0], [89.5, 6557.0], [89.6, 6564.0], [89.7, 6576.0], [89.8, 6590.0], [89.9, 6601.0], [90.0, 6615.0], [90.1, 6626.0], [90.2, 6636.0], [90.3, 6656.0], [90.4, 6672.0], [90.5, 6686.0], [90.6, 6696.0], [90.7, 6707.0], [90.8, 6724.0], [90.9, 6738.0], [91.0, 6759.0], [91.1, 6780.0], [91.2, 6798.0], [91.3, 6816.0], [91.4, 6838.0], [91.5, 6864.0], [91.6, 6884.0], [91.7, 6911.0], [91.8, 6962.0], [91.9, 7009.0], [92.0, 7047.0], [92.1, 7091.0], [92.2, 7124.0], [92.3, 7188.0], [92.4, 7239.0], [92.5, 7305.0], [92.6, 7359.0], [92.7, 7437.0], [92.8, 7504.0], [92.9, 7533.0], [93.0, 7560.0], [93.1, 7589.0], [93.2, 7611.0], [93.3, 7668.0], [93.4, 7703.0], [93.5, 7765.0], [93.6, 7873.0], [93.7, 7939.0], [93.8, 7982.0], [93.9, 8047.0], [94.0, 8104.0], [94.1, 8158.0], [94.2, 8208.0], [94.3, 8258.0], [94.4, 8303.0], [94.5, 8379.0], [94.6, 8442.0], [94.7, 8511.0], [94.8, 8589.0], [94.9, 8648.0], [95.0, 8748.0], [95.1, 8833.0], [95.2, 8999.0], [95.3, 9117.0], [95.4, 9209.0], [95.5, 9267.0], [95.6, 9328.0], [95.7, 9422.0], [95.8, 9512.0], [95.9, 9585.0], [96.0, 9681.0], [96.1, 9770.0], [96.2, 9916.0], [96.3, 9925.0], [96.4, 9934.0], [96.5, 10104.0], [96.6, 10226.0], [96.7, 10274.0], [96.8, 10348.0], [96.9, 10536.0], [97.0, 10656.0], [97.1, 10858.0], [97.2, 11007.0], [97.3, 11144.0], [97.4, 11507.0], [97.5, 11785.0], [97.6, 12526.0], [97.7, 12938.0], [97.8, 13234.0], [97.9, 13828.0], [98.0, 15353.0], [98.1, 15539.0], [98.2, 15605.0], [98.3, 15696.0], [98.4, 15942.0], [98.5, 16316.0], [98.6, 16566.0], [98.7, 16873.0], [98.8, 17237.0], [98.9, 17495.0], [99.0, 17730.0], [99.1, 17952.0], [99.2, 18157.0], [99.3, 18565.0], [99.4, 18977.0], [99.5, 19425.0], [99.6, 19767.0], [99.7, 20801.0], [99.8, 21834.0], [99.9, 24361.0], [100.0, 28795.0]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[0.0, 223.0], [0.1, 231.0], [0.2, 233.0], [0.3, 234.0], [0.4, 235.0], [0.5, 235.0], [0.6, 236.0], [0.7, 236.0], [0.8, 237.0], [0.9, 237.0], [1.0, 237.0], [1.1, 238.0], [1.2, 238.0], [1.3, 238.0], [1.4, 238.0], [1.5, 239.0], [1.6, 239.0], [1.7, 239.0], [1.8, 239.0], [1.9, 240.0], [2.0, 240.0], [2.1, 240.0], [2.2, 240.0], [2.3, 240.0], [2.4, 240.0], [2.5, 241.0], [2.6, 241.0], [2.7, 241.0], [2.8, 241.0], [2.9, 242.0], [3.0, 242.0], [3.1, 242.0], [3.2, 242.0], [3.3, 242.0], [3.4, 242.0], [3.5, 243.0], [3.6, 243.0], [3.7, 243.0], [3.8, 243.0], [3.9, 243.0], [4.0, 244.0], [4.1, 244.0], [4.2, 244.0], [4.3, 244.0], [4.4, 244.0], [4.5, 244.0], [4.6, 245.0], [4.7, 245.0], [4.8, 245.0], [4.9, 245.0], [5.0, 245.0], [5.1, 246.0], [5.2, 246.0], [5.3, 246.0], [5.4, 246.0], [5.5, 246.0], [5.6, 246.0], [5.7, 247.0], [5.8, 247.0], [5.9, 247.0], [6.0, 247.0], [6.1, 247.0], [6.2, 248.0], [6.3, 248.0], [6.4, 248.0], [6.5, 248.0], [6.6, 249.0], [6.7, 249.0], [6.8, 249.0], [6.9, 249.0], [7.0, 249.0], [7.1, 250.0], [7.2, 250.0], [7.3, 250.0], [7.4, 250.0], [7.5, 251.0], [7.6, 251.0], [7.7, 251.0], [7.8, 251.0], [7.9, 251.0], [8.0, 252.0], [8.1, 252.0], [8.2, 252.0], [8.3, 253.0], [8.4, 253.0], [8.5, 253.0], [8.6, 254.0], [8.7, 254.0], [8.8, 254.0], [8.9, 254.0], [9.0, 255.0], [9.1, 255.0], [9.2, 255.0], [9.3, 256.0], [9.4, 256.0], [9.5, 257.0], [9.6, 257.0], [9.7, 257.0], [9.8, 258.0], [9.9, 258.0], [10.0, 259.0], [10.1, 259.0], [10.2, 260.0], [10.3, 260.0], [10.4, 261.0], [10.5, 261.0], [10.6, 262.0], [10.7, 262.0], [10.8, 263.0], [10.9, 263.0], [11.0, 264.0], [11.1, 264.0], [11.2, 265.0], [11.3, 265.0], [11.4, 266.0], [11.5, 266.0], [11.6, 267.0], [11.7, 268.0], [11.8, 268.0], [11.9, 269.0], [12.0, 269.0], [12.1, 270.0], [12.2, 271.0], [12.3, 272.0], [12.4, 272.0], [12.5, 273.0], [12.6, 274.0], [12.7, 275.0], [12.8, 275.0], [12.9, 276.0], [13.0, 276.0], [13.1, 277.0], [13.2, 277.0], [13.3, 278.0], [13.4, 278.0], [13.5, 279.0], [13.6, 280.0], [13.7, 281.0], [13.8, 281.0], [13.9, 282.0], [14.0, 283.0], [14.1, 284.0], [14.2, 284.0], [14.3, 285.0], [14.4, 285.0], [14.5, 286.0], [14.6, 287.0], [14.7, 287.0], [14.8, 288.0], [14.9, 289.0], [15.0, 289.0], [15.1, 290.0], [15.2, 292.0], [15.3, 293.0], [15.4, 294.0], [15.5, 294.0], [15.6, 295.0], [15.7, 296.0], [15.8, 296.0], [15.9, 297.0], [16.0, 298.0], [16.1, 299.0], [16.2, 300.0], [16.3, 300.0], [16.4, 301.0], [16.5, 302.0], [16.6, 303.0], [16.7, 304.0], [16.8, 305.0], [16.9, 305.0], [17.0, 306.0], [17.1, 307.0], [17.2, 308.0], [17.3, 309.0], [17.4, 311.0], [17.5, 311.0], [17.6, 312.0], [17.7, 313.0], [17.8, 314.0], [17.9, 315.0], [18.0, 316.0], [18.1, 317.0], [18.2, 318.0], [18.3, 319.0], [18.4, 320.0], [18.5, 320.0], [18.6, 322.0], [18.7, 323.0], [18.8, 324.0], [18.9, 325.0], [19.0, 326.0], [19.1, 326.0], [19.2, 328.0], [19.3, 329.0], [19.4, 330.0], [19.5, 331.0], [19.6, 333.0], [19.7, 335.0], [19.8, 336.0], [19.9, 337.0], [20.0, 339.0], [20.1, 342.0], [20.2, 344.0], [20.3, 345.0], [20.4, 347.0], [20.5, 349.0], [20.6, 351.0], [20.7, 352.0], [20.8, 355.0], [20.9, 357.0], [21.0, 358.0], [21.1, 360.0], [21.2, 361.0], [21.3, 363.0], [21.4, 365.0], [21.5, 366.0], [21.6, 367.0], [21.7, 369.0], [21.8, 370.0], [21.9, 373.0], [22.0, 375.0], [22.1, 377.0], [22.2, 380.0], [22.3, 382.0], [22.4, 384.0], [22.5, 387.0], [22.6, 389.0], [22.7, 390.0], [22.8, 394.0], [22.9, 396.0], [23.0, 399.0], [23.1, 401.0], [23.2, 403.0], [23.3, 405.0], [23.4, 408.0], [23.5, 411.0], [23.6, 414.0], [23.7, 417.0], [23.8, 420.0], [23.9, 424.0], [24.0, 426.0], [24.1, 430.0], [24.2, 432.0], [24.3, 436.0], [24.4, 438.0], [24.5, 441.0], [24.6, 444.0], [24.7, 447.0], [24.8, 450.0], [24.9, 452.0], [25.0, 455.0], [25.1, 459.0], [25.2, 462.0], [25.3, 465.0], [25.4, 467.0], [25.5, 471.0], [25.6, 473.0], [25.7, 476.0], [25.8, 478.0], [25.9, 481.0], [26.0, 484.0], [26.1, 487.0], [26.2, 491.0], [26.3, 494.0], [26.4, 496.0], [26.5, 499.0], [26.6, 503.0], [26.7, 507.0], [26.8, 509.0], [26.9, 513.0], [27.0, 515.0], [27.1, 519.0], [27.2, 523.0], [27.3, 528.0], [27.4, 531.0], [27.5, 535.0], [27.6, 542.0], [27.7, 545.0], [27.8, 548.0], [27.9, 551.0], [28.0, 555.0], [28.1, 558.0], [28.2, 562.0], [28.3, 566.0], [28.4, 569.0], [28.5, 574.0], [28.6, 577.0], [28.7, 583.0], [28.8, 587.0], [28.9, 591.0], [29.0, 595.0], [29.1, 599.0], [29.2, 604.0], [29.3, 608.0], [29.4, 615.0], [29.5, 624.0], [29.6, 630.0], [29.7, 637.0], [29.8, 643.0], [29.9, 650.0], [30.0, 655.0], [30.1, 659.0], [30.2, 663.0], [30.3, 669.0], [30.4, 674.0], [30.5, 680.0], [30.6, 689.0], [30.7, 698.0], [30.8, 704.0], [30.9, 710.0], [31.0, 718.0], [31.1, 725.0], [31.2, 734.0], [31.3, 743.0], [31.4, 749.0], [31.5, 758.0], [31.6, 765.0], [31.7, 771.0], [31.8, 779.0], [31.9, 787.0], [32.0, 794.0], [32.1, 800.0], [32.2, 807.0], [32.3, 814.0], [32.4, 821.0], [32.5, 825.0], [32.6, 833.0], [32.7, 841.0], [32.8, 844.0], [32.9, 851.0], [33.0, 857.0], [33.1, 864.0], [33.2, 871.0], [33.3, 878.0], [33.4, 882.0], [33.5, 890.0], [33.6, 897.0], [33.7, 905.0], [33.8, 909.0], [33.9, 918.0], [34.0, 927.0], [34.1, 931.0], [34.2, 933.0], [34.3, 939.0], [34.4, 946.0], [34.5, 954.0], [34.6, 959.0], [34.7, 966.0], [34.8, 972.0], [34.9, 981.0], [35.0, 989.0], [35.1, 996.0], [35.2, 1002.0], [35.3, 1009.0], [35.4, 1015.0], [35.5, 1018.0], [35.6, 1023.0], [35.7, 1029.0], [35.8, 1035.0], [35.9, 1041.0], [36.0, 1047.0], [36.1, 1055.0], [36.2, 1060.0], [36.3, 1065.0], [36.4, 1072.0], [36.5, 1077.0], [36.6, 1082.0], [36.7, 1087.0], [36.8, 1094.0], [36.9, 1100.0], [37.0, 1105.0], [37.1, 1110.0], [37.2, 1120.0], [37.3, 1125.0], [37.4, 1134.0], [37.5, 1141.0], [37.6, 1146.0], [37.7, 1151.0], [37.8, 1155.0], [37.9, 1161.0], [38.0, 1168.0], [38.1, 1174.0], [38.2, 1181.0], [38.3, 1189.0], [38.4, 1196.0], [38.5, 1202.0], [38.6, 1205.0], [38.7, 1211.0], [38.8, 1216.0], [38.9, 1225.0], [39.0, 1230.0], [39.1, 1235.0], [39.2, 1240.0], [39.3, 1247.0], [39.4, 1257.0], [39.5, 1265.0], [39.6, 1270.0], [39.7, 1278.0], [39.8, 1285.0], [39.9, 1288.0], [40.0, 1299.0], [40.1, 1306.0], [40.2, 1312.0], [40.3, 1320.0], [40.4, 1326.0], [40.5, 1336.0], [40.6, 1342.0], [40.7, 1351.0], [40.8, 1357.0], [40.9, 1365.0], [41.0, 1371.0], [41.1, 1376.0], [41.2, 1383.0], [41.3, 1392.0], [41.4, 1399.0], [41.5, 1405.0], [41.6, 1410.0], [41.7, 1413.0], [41.8, 1418.0], [41.9, 1426.0], [42.0, 1431.0], [42.1, 1438.0], [42.2, 1445.0], [42.3, 1452.0], [42.4, 1456.0], [42.5, 1462.0], [42.6, 1471.0], [42.7, 1480.0], [42.8, 1487.0], [42.9, 1496.0], [43.0, 1504.0], [43.1, 1510.0], [43.2, 1517.0], [43.3, 1523.0], [43.4, 1528.0], [43.5, 1534.0], [43.6, 1541.0], [43.7, 1550.0], [43.8, 1556.0], [43.9, 1562.0], [44.0, 1569.0], [44.1, 1575.0], [44.2, 1580.0], [44.3, 1585.0], [44.4, 1591.0], [44.5, 1598.0], [44.6, 1608.0], [44.7, 1614.0], [44.8, 1620.0], [44.9, 1628.0], [45.0, 1633.0], [45.1, 1640.0], [45.2, 1648.0], [45.3, 1656.0], [45.4, 1661.0], [45.5, 1668.0], [45.6, 1675.0], [45.7, 1683.0], [45.8, 1690.0], [45.9, 1699.0], [46.0, 1707.0], [46.1, 1715.0], [46.2, 1722.0], [46.3, 1731.0], [46.4, 1739.0], [46.5, 1747.0], [46.6, 1755.0], [46.7, 1761.0], [46.8, 1767.0], [46.9, 1777.0], [47.0, 1783.0], [47.1, 1791.0], [47.2, 1802.0], [47.3, 1813.0], [47.4, 1822.0], [47.5, 1833.0], [47.6, 1846.0], [47.7, 1859.0], [47.8, 1870.0], [47.9, 1875.0], [48.0, 1884.0], [48.1, 1893.0], [48.2, 1902.0], [48.3, 1909.0], [48.4, 1916.0], [48.5, 1925.0], [48.6, 1933.0], [48.7, 1941.0], [48.8, 1948.0], [48.9, 1954.0], [49.0, 1958.0], [49.1, 1968.0], [49.2, 1976.0], [49.3, 1984.0], [49.4, 1990.0], [49.5, 1995.0], [49.6, 1998.0], [49.7, 2004.0], [49.8, 2009.0], [49.9, 2014.0], [50.0, 2018.0], [50.1, 2022.0], [50.2, 2026.0], [50.3, 2029.0], [50.4, 2033.0], [50.5, 2039.0], [50.6, 2043.0], [50.7, 2046.0], [50.8, 2050.0], [50.9, 2055.0], [51.0, 2059.0], [51.1, 2065.0], [51.2, 2069.0], [51.3, 2075.0], [51.4, 2079.0], [51.5, 2084.0], [51.6, 2088.0], [51.7, 2093.0], [51.8, 2096.0], [51.9, 2101.0], [52.0, 2107.0], [52.1, 2111.0], [52.2, 2115.0], [52.3, 2120.0], [52.4, 2125.0], [52.5, 2129.0], [52.6, 2134.0], [52.7, 2140.0], [52.8, 2145.0], [52.9, 2149.0], [53.0, 2154.0], [53.1, 2157.0], [53.2, 2165.0], [53.3, 2169.0], [53.4, 2173.0], [53.5, 2179.0], [53.6, 2184.0], [53.7, 2190.0], [53.8, 2194.0], [53.9, 2199.0], [54.0, 2205.0], [54.1, 2210.0], [54.2, 2215.0], [54.3, 2221.0], [54.4, 2227.0], [54.5, 2235.0], [54.6, 2242.0], [54.7, 2249.0], [54.8, 2255.0], [54.9, 2262.0], [55.0, 2267.0], [55.1, 2272.0], [55.2, 2278.0], [55.3, 2286.0], [55.4, 2291.0], [55.5, 2299.0], [55.6, 2303.0], [55.7, 2310.0], [55.8, 2317.0], [55.9, 2325.0], [56.0, 2333.0], [56.1, 2339.0], [56.2, 2343.0], [56.3, 2351.0], [56.4, 2357.0], [56.5, 2364.0], [56.6, 2369.0], [56.7, 2377.0], [56.8, 2382.0], [56.9, 2386.0], [57.0, 2390.0], [57.1, 2398.0], [57.2, 2402.0], [57.3, 2409.0], [57.4, 2414.0], [57.5, 2419.0], [57.6, 2423.0], [57.7, 2431.0], [57.8, 2436.0], [57.9, 2443.0], [58.0, 2449.0], [58.1, 2455.0], [58.2, 2462.0], [58.3, 2468.0], [58.4, 2472.0], [58.5, 2479.0], [58.6, 2486.0], [58.7, 2495.0], [58.8, 2504.0], [58.9, 2511.0], [59.0, 2519.0], [59.1, 2523.0], [59.2, 2532.0], [59.3, 2537.0], [59.4, 2545.0], [59.5, 2551.0], [59.6, 2560.0], [59.7, 2567.0], [59.8, 2572.0], [59.9, 2580.0], [60.0, 2586.0], [60.1, 2592.0], [60.2, 2597.0], [60.3, 2603.0], [60.4, 2608.0], [60.5, 2614.0], [60.6, 2621.0], [60.7, 2627.0], [60.8, 2632.0], [60.9, 2635.0], [61.0, 2643.0], [61.1, 2649.0], [61.2, 2655.0], [61.3, 2660.0], [61.4, 2665.0], [61.5, 2671.0], [61.6, 2677.0], [61.7, 2682.0], [61.8, 2688.0], [61.9, 2693.0], [62.0, 2697.0], [62.1, 2703.0], [62.2, 2707.0], [62.3, 2711.0], [62.4, 2718.0], [62.5, 2723.0], [62.6, 2730.0], [62.7, 2733.0], [62.8, 2738.0], [62.9, 2743.0], [63.0, 2751.0], [63.1, 2757.0], [63.2, 2764.0], [63.3, 2769.0], [63.4, 2774.0], [63.5, 2780.0], [63.6, 2785.0], [63.7, 2789.0], [63.8, 2793.0], [63.9, 2801.0], [64.0, 2805.0], [64.1, 2809.0], [64.2, 2814.0], [64.3, 2821.0], [64.4, 2825.0], [64.5, 2831.0], [64.6, 2836.0], [64.7, 2842.0], [64.8, 2847.0], [64.9, 2854.0], [65.0, 2860.0], [65.1, 2863.0], [65.2, 2869.0], [65.3, 2873.0], [65.4, 2877.0], [65.5, 2882.0], [65.6, 2886.0], [65.7, 2890.0], [65.8, 2894.0], [65.9, 2899.0], [66.0, 2904.0], [66.1, 2909.0], [66.2, 2915.0], [66.3, 2921.0], [66.4, 2925.0], [66.5, 2930.0], [66.6, 2937.0], [66.7, 2942.0], [66.8, 2946.0], [66.9, 2950.0], [67.0, 2955.0], [67.1, 2960.0], [67.2, 2967.0], [67.3, 2974.0], [67.4, 2980.0], [67.5, 2986.0], [67.6, 2996.0], [67.7, 3001.0], [67.8, 3007.0], [67.9, 3015.0], [68.0, 3019.0], [68.1, 3025.0], [68.2, 3033.0], [68.3, 3042.0], [68.4, 3048.0], [68.5, 3054.0], [68.6, 3058.0], [68.7, 3067.0], [68.8, 3072.0], [68.9, 3083.0], [69.0, 3087.0], [69.1, 3092.0], [69.2, 3098.0], [69.3, 3108.0], [69.4, 3116.0], [69.5, 3126.0], [69.6, 3134.0], [69.7, 3141.0], [69.8, 3150.0], [69.9, 3162.0], [70.0, 3171.0], [70.1, 3180.0], [70.2, 3189.0], [70.3, 3198.0], [70.4, 3206.0], [70.5, 3214.0], [70.6, 3223.0], [70.7, 3229.0], [70.8, 3239.0], [70.9, 3247.0], [71.0, 3258.0], [71.1, 3264.0], [71.2, 3273.0], [71.3, 3282.0], [71.4, 3291.0], [71.5, 3299.0], [71.6, 3304.0], [71.7, 3316.0], [71.8, 3328.0], [71.9, 3336.0], [72.0, 3345.0], [72.1, 3352.0], [72.2, 3363.0], [72.3, 3371.0], [72.4, 3385.0], [72.5, 3393.0], [72.6, 3408.0], [72.7, 3419.0], [72.8, 3429.0], [72.9, 3441.0], [73.0, 3450.0], [73.1, 3457.0], [73.2, 3469.0], [73.3, 3476.0], [73.4, 3481.0], [73.5, 3490.0], [73.6, 3502.0], [73.7, 3511.0], [73.8, 3521.0], [73.9, 3530.0], [74.0, 3538.0], [74.1, 3546.0], [74.2, 3556.0], [74.3, 3568.0], [74.4, 3582.0], [74.5, 3596.0], [74.6, 3604.0], [74.7, 3610.0], [74.8, 3619.0], [74.9, 3628.0], [75.0, 3637.0], [75.1, 3644.0], [75.2, 3656.0], [75.3, 3662.0], [75.4, 3672.0], [75.5, 3681.0], [75.6, 3691.0], [75.7, 3699.0], [75.8, 3707.0], [75.9, 3714.0], [76.0, 3721.0], [76.1, 3728.0], [76.2, 3735.0], [76.3, 3745.0], [76.4, 3755.0], [76.5, 3763.0], [76.6, 3771.0], [76.7, 3777.0], [76.8, 3782.0], [76.9, 3786.0], [77.0, 3791.0], [77.1, 3796.0], [77.2, 3809.0], [77.3, 3814.0], [77.4, 3824.0], [77.5, 3834.0], [77.6, 3842.0], [77.7, 3850.0], [77.8, 3857.0], [77.9, 3864.0], [78.0, 3872.0], [78.1, 3880.0], [78.2, 3888.0], [78.3, 3898.0], [78.4, 3902.0], [78.5, 3911.0], [78.6, 3923.0], [78.7, 3935.0], [78.8, 3943.0], [78.9, 3954.0], [79.0, 3963.0], [79.1, 3976.0], [79.2, 3991.0], [79.3, 4006.0], [79.4, 4021.0], [79.5, 4034.0], [79.6, 4047.0], [79.7, 4062.0], [79.8, 4075.0], [79.9, 4094.0], [80.0, 4113.0], [80.1, 4124.0], [80.2, 4137.0], [80.3, 4146.0], [80.4, 4156.0], [80.5, 4170.0], [80.6, 4180.0], [80.7, 4196.0], [80.8, 4213.0], [80.9, 4225.0], [81.0, 4245.0], [81.1, 4254.0], [81.2, 4265.0], [81.3, 4282.0], [81.4, 4293.0], [81.5, 4301.0], [81.6, 4314.0], [81.7, 4324.0], [81.8, 4338.0], [81.9, 4348.0], [82.0, 4357.0], [82.1, 4370.0], [82.2, 4383.0], [82.3, 4396.0], [82.4, 4407.0], [82.5, 4417.0], [82.6, 4425.0], [82.7, 4435.0], [82.8, 4445.0], [82.9, 4458.0], [83.0, 4469.0], [83.1, 4474.0], [83.2, 4484.0], [83.3, 4495.0], [83.4, 4504.0], [83.5, 4519.0], [83.6, 4528.0], [83.7, 4545.0], [83.8, 4556.0], [83.9, 4565.0], [84.0, 4573.0], [84.1, 4591.0], [84.2, 4607.0], [84.3, 4619.0], [84.4, 4627.0], [84.5, 4637.0], [84.6, 4650.0], [84.7, 4657.0], [84.8, 4674.0], [84.9, 4685.0], [85.0, 4703.0], [85.1, 4721.0], [85.2, 4735.0], [85.3, 4749.0], [85.4, 4763.0], [85.5, 4776.0], [85.6, 4785.0], [85.7, 4803.0], [85.8, 4815.0], [85.9, 4830.0], [86.0, 4844.0], [86.1, 4860.0], [86.2, 4876.0], [86.3, 4899.0], [86.4, 4912.0], [86.5, 4937.0], [86.6, 4964.0], [86.7, 5002.0], [86.8, 5025.0], [86.9, 5057.0], [87.0, 5079.0], [87.1, 5094.0], [87.2, 5120.0], [87.3, 5135.0], [87.4, 5152.0], [87.5, 5171.0], [87.6, 5189.0], [87.7, 5208.0], [87.8, 5220.0], [87.9, 5235.0], [88.0, 5250.0], [88.1, 5262.0], [88.2, 5274.0], [88.3, 5282.0], [88.4, 5290.0], [88.5, 5303.0], [88.6, 5314.0], [88.7, 5324.0], [88.8, 5332.0], [88.9, 5350.0], [89.0, 5362.0], [89.1, 5378.0], [89.2, 5389.0], [89.3, 5401.0], [89.4, 5413.0], [89.5, 5422.0], [89.6, 5432.0], [89.7, 5450.0], [89.8, 5463.0], [89.9, 5470.0], [90.0, 5479.0], [90.1, 5490.0], [90.2, 5497.0], [90.3, 5513.0], [90.4, 5525.0], [90.5, 5539.0], [90.6, 5552.0], [90.7, 5566.0], [90.8, 5583.0], [90.9, 5602.0], [91.0, 5613.0], [91.1, 5635.0], [91.2, 5660.0], [91.3, 5671.0], [91.4, 5699.0], [91.5, 5719.0], [91.6, 5733.0], [91.7, 5751.0], [91.8, 5762.0], [91.9, 5784.0], [92.0, 5798.0], [92.1, 5814.0], [92.2, 5826.0], [92.3, 5843.0], [92.4, 5852.0], [92.5, 5862.0], [92.6, 5875.0], [92.7, 5898.0], [92.8, 5915.0], [92.9, 5931.0], [93.0, 5947.0], [93.1, 5959.0], [93.2, 5970.0], [93.3, 5977.0], [93.4, 5991.0], [93.5, 6002.0], [93.6, 6012.0], [93.7, 6027.0], [93.8, 6043.0], [93.9, 6052.0], [94.0, 6062.0], [94.1, 6071.0], [94.2, 6078.0], [94.3, 6087.0], [94.4, 6099.0], [94.5, 6114.0], [94.6, 6132.0], [94.7, 6146.0], [94.8, 6159.0], [94.9, 6179.0], [95.0, 6191.0], [95.1, 6203.0], [95.2, 6216.0], [95.3, 6225.0], [95.4, 6239.0], [95.5, 6250.0], [95.6, 6261.0], [95.7, 6267.0], [95.8, 6277.0], [95.9, 6292.0], [96.0, 6302.0], [96.1, 6312.0], [96.2, 6325.0], [96.3, 6334.0], [96.4, 6346.0], [96.5, 6359.0], [96.6, 6370.0], [96.7, 6382.0], [96.8, 6398.0], [96.9, 6410.0], [97.0, 6421.0], [97.1, 6430.0], [97.2, 6443.0], [97.3, 6460.0], [97.4, 6475.0], [97.5, 6493.0], [97.6, 6513.0], [97.7, 6533.0], [97.8, 6560.0], [97.9, 6601.0], [98.0, 6625.0], [98.1, 6644.0], [98.2, 6681.0], [98.3, 6732.0], [98.4, 6802.0], [98.5, 6876.0], [98.6, 6961.0], [98.7, 7035.0], [98.8, 7140.0], [98.9, 7343.0], [99.0, 7640.0], [99.1, 7781.0], [99.2, 7918.0], [99.3, 8013.0], [99.4, 8100.0], [99.5, 8238.0], [99.6, 8345.0], [99.7, 8509.0], [99.8, 9427.0], [99.9, 10078.0]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 2563.0, "series": [{"data": [[400.0, 1012.0], [500.0, 1955.0], [600.0, 705.0], [700.0, 417.0], [800.0, 297.0], [900.0, 243.0], [1000.0, 202.0], [1100.0, 204.0], [1200.0, 232.0], [1300.0, 229.0], [1400.0, 202.0], [1500.0, 299.0], [1600.0, 296.0], [1700.0, 229.0], [1800.0, 220.0], [1900.0, 171.0], [2000.0, 186.0], [2100.0, 173.0], [2300.0, 300.0], [2200.0, 262.0], [2400.0, 281.0], [2500.0, 263.0], [2600.0, 233.0], [2700.0, 219.0], [2800.0, 251.0], [2900.0, 209.0], [3000.0, 271.0], [3100.0, 251.0], [3200.0, 226.0], [3300.0, 220.0], [3400.0, 180.0], [3500.0, 229.0], [3600.0, 188.0], [3700.0, 228.0], [3800.0, 193.0], [3900.0, 189.0], [4000.0, 202.0], [4200.0, 136.0], [4100.0, 178.0], [4300.0, 160.0], [4500.0, 146.0], [4400.0, 112.0], [4600.0, 127.0], [4700.0, 136.0], [4800.0, 142.0], [4900.0, 134.0], [5000.0, 121.0], [5100.0, 100.0], [5300.0, 92.0], [5200.0, 58.0], [5400.0, 125.0], [5500.0, 137.0], [5600.0, 121.0], [5700.0, 164.0], [5800.0, 121.0], [5900.0, 89.0], [6000.0, 110.0], [6100.0, 116.0], [6200.0, 120.0], [6300.0, 94.0], [6400.0, 128.0], [6600.0, 125.0], [6500.0, 136.0], [6700.0, 92.0], [6800.0, 74.0], [6900.0, 36.0], [7000.0, 40.0], [7100.0, 34.0], [7200.0, 27.0], [7300.0, 30.0], [7400.0, 17.0], [7600.0, 39.0], [7500.0, 62.0], [7700.0, 22.0], [7900.0, 31.0], [7800.0, 21.0], [8000.0, 23.0], [8100.0, 34.0], [8200.0, 34.0], [8300.0, 23.0], [8400.0, 25.0], [8500.0, 21.0], [8600.0, 20.0], [8700.0, 22.0], [9100.0, 20.0], [9200.0, 25.0], [8900.0, 10.0], [8800.0, 12.0], [9000.0, 11.0], [9300.0, 24.0], [9400.0, 16.0], [9600.0, 17.0], [9500.0, 21.0], [9700.0, 19.0], [10000.0, 8.0], [9900.0, 40.0], [10100.0, 15.0], [10200.0, 21.0], [9800.0, 10.0], [10300.0, 20.0], [10700.0, 12.0], [10500.0, 13.0], [10400.0, 8.0], [10600.0, 9.0], [10900.0, 12.0], [11100.0, 10.0], [10800.0, 5.0], [11200.0, 2.0], [11000.0, 12.0], [11700.0, 8.0], [11600.0, 5.0], [11300.0, 4.0], [11500.0, 8.0], [11400.0, 4.0], [11800.0, 3.0], [12200.0, 1.0], [12100.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [12400.0, 5.0], [12600.0, 8.0], [12700.0, 3.0], [12500.0, 4.0], [12800.0, 2.0], [13300.0, 6.0], [13000.0, 7.0], [13100.0, 5.0], [12900.0, 6.0], [13200.0, 2.0], [13500.0, 1.0], [13700.0, 3.0], [13400.0, 2.0], [13800.0, 4.0], [13600.0, 1.0], [14000.0, 2.0], [14100.0, 1.0], [14300.0, 1.0], [13900.0, 3.0], [14800.0, 1.0], [14600.0, 2.0], [14500.0, 1.0], [15300.0, 3.0], [15000.0, 2.0], [15700.0, 6.0], [15400.0, 2.0], [15500.0, 28.0], [15600.0, 20.0], [15800.0, 6.0], [16300.0, 7.0], [16200.0, 5.0], [15900.0, 4.0], [16000.0, 4.0], [16100.0, 2.0], [16800.0, 10.0], [16600.0, 1.0], [17400.0, 6.0], [17000.0, 1.0], [17200.0, 7.0], [16400.0, 4.0], [18400.0, 5.0], [17800.0, 5.0], [17600.0, 4.0], [18000.0, 8.0], [18200.0, 4.0], [18800.0, 4.0], [19000.0, 6.0], [19200.0, 2.0], [19400.0, 3.0], [18600.0, 1.0], [19600.0, 4.0], [20000.0, 2.0], [20200.0, 1.0], [20800.0, 3.0], [21400.0, 2.0], [21000.0, 1.0], [21600.0, 4.0], [22200.0, 1.0], [22000.0, 1.0], [21800.0, 2.0], [22600.0, 3.0], [22800.0, 1.0], [24000.0, 1.0], [23800.0, 1.0], [24800.0, 2.0], [25400.0, 1.0], [24600.0, 1.0], [27400.0, 2.0], [27000.0, 1.0], [28000.0, 1.0], [17300.0, 7.0], [16500.0, 11.0], [16900.0, 6.0], [16700.0, 5.0], [17100.0, 5.0], [18100.0, 8.0], [17900.0, 8.0], [17500.0, 10.0], [17700.0, 8.0], [18300.0, 2.0], [18500.0, 8.0], [19100.0, 5.0], [18700.0, 3.0], [18900.0, 5.0], [19300.0, 1.0], [19500.0, 7.0], [20100.0, 2.0], [19900.0, 3.0], [19700.0, 5.0], [20300.0, 1.0], [20700.0, 2.0], [21100.0, 2.0], [21500.0, 3.0], [21300.0, 1.0], [20500.0, 3.0], [21900.0, 3.0], [22100.0, 2.0], [23700.0, 1.0], [24300.0, 1.0], [24100.0, 1.0], [24700.0, 1.0], [24900.0, 2.0], [25500.0, 1.0], [27300.0, 1.0], [26900.0, 2.0], [28700.0, 1.0]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[200.0, 2563.0], [300.0, 1085.0], [400.0, 556.0], [500.0, 411.0], [600.0, 254.0], [700.0, 218.0], [800.0, 244.0], [900.0, 241.0], [1000.0, 276.0], [1100.0, 249.0], [1200.0, 251.0], [1300.0, 216.0], [1400.0, 245.0], [1500.0, 247.0], [1600.0, 221.0], [1700.0, 201.0], [1800.0, 153.0], [1900.0, 237.0], [2000.0, 356.0], [2100.0, 323.0], [2200.0, 254.0], [2300.0, 255.0], [2400.0, 259.0], [2500.0, 232.0], [2600.0, 289.0], [2700.0, 292.0], [2800.0, 319.0], [2900.0, 282.0], [3000.0, 245.0], [3100.0, 172.0], [3200.0, 189.0], [3300.0, 167.0], [3400.0, 163.0], [3500.0, 149.0], [3600.0, 186.0], [3700.0, 223.0], [3800.0, 196.0], [3900.0, 145.0], [4000.0, 107.0], [4100.0, 123.0], [4200.0, 124.0], [4300.0, 133.0], [4400.0, 160.0], [4500.0, 130.0], [4600.0, 131.0], [4700.0, 109.0], [4800.0, 101.0], [4900.0, 58.0], [5000.0, 70.0], [5100.0, 87.0], [5200.0, 126.0], [5300.0, 132.0], [5400.0, 149.0], [5500.0, 104.0], [5600.0, 81.0], [5700.0, 97.0], [5800.0, 111.0], [5900.0, 121.0], [6000.0, 147.0], [6100.0, 103.0], [6200.0, 145.0], [6300.0, 135.0], [6400.0, 112.0], [6500.0, 59.0], [6600.0, 54.0], [6700.0, 23.0], [6800.0, 22.0], [6900.0, 20.0], [7000.0, 15.0], [7100.0, 13.0], [7200.0, 7.0], [7300.0, 5.0], [7400.0, 9.0], [7500.0, 2.0], [7600.0, 11.0], [7700.0, 12.0], [7800.0, 10.0], [7900.0, 17.0], [8000.0, 17.0], [8100.0, 12.0], [8200.0, 15.0], [8400.0, 9.0], [8300.0, 12.0], [8500.0, 3.0], [8600.0, 1.0], [8700.0, 1.0], [8800.0, 3.0], [9100.0, 1.0], [9000.0, 1.0], [9400.0, 3.0], [9700.0, 3.0], [9600.0, 2.0], [9500.0, 1.0], [9300.0, 4.0], [9900.0, 5.0], [10000.0, 3.0], [9800.0, 2.0], [10100.0, 1.0], [10200.0, 2.0], [10700.0, 3.0], [10600.0, 2.0], [10500.0, 1.0], [10300.0, 2.0], [10400.0, 1.0], [10800.0, 1.0], [11000.0, 1.0], [16000.0, 1.0]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 28700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 113.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 19659.0, "series": [{"data": [[0.0, 5277.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7235.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 19659.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 113.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 220.53997923156788, "minX": 1.67224506E12, "maxY": 732.757181787215, "series": [{"data": [[1.67224512E12, 703.9385474860335], [1.67224518E12, 732.757181787215], [1.67224506E12, 220.53997923156788], [1.67224524E12, 227.26068527022312]], "isOverall": false, "label": "Ult. Thread Group - Teste de Stress", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67224524E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 234.0, "minX": 2.0, "maxY": 19425.0, "series": [{"data": [[2.0, 18134.0], [3.0, 19425.0], [4.0, 9925.0], [5.0, 9928.0], [6.0, 9925.0], [7.0, 9926.0], [8.0, 8605.5], [9.0, 6831.5], [10.0, 9533.5], [11.0, 488.0], [12.0, 11434.666666666666], [13.0, 4229.5], [14.0, 9044.0], [15.0, 8942.0], [16.0, 7786.5], [17.0, 4987.5], [18.0, 9228.0], [19.0, 15675.0], [20.0, 10029.0], [21.0, 3981.0], [22.0, 596.0], [23.0, 638.5], [24.0, 624.0], [25.0, 536.3333333333334], [26.0, 514.0], [27.0, 622.0], [28.0, 592.25], [29.0, 518.4], [30.0, 482.3333333333333], [31.0, 479.0], [32.0, 670.25], [33.0, 638.75], [34.0, 612.25], [35.0, 625.0], [36.0, 542.5], [37.0, 493.0], [39.0, 617.8571428571429], [38.0, 494.49999999999994], [40.0, 749.2], [41.0, 585.25], [42.0, 527.6], [43.0, 553.0], [44.0, 586.6666666666666], [45.0, 533.6666666666666], [46.0, 576.0], [47.0, 760.6], [48.0, 555.75], [49.0, 570.4000000000001], [50.0, 552.9999999999999], [51.0, 535.5714285714286], [52.0, 514.0], [53.0, 563.25], [55.0, 992.7777777777778], [54.0, 497.3636363636364], [56.0, 609.6], [57.0, 591.0], [58.0, 659.5], [59.0, 554.9999999999999], [60.0, 567.875], [61.0, 572.375], [62.0, 570.2222222222222], [63.0, 566.5], [64.0, 1397.5], [65.0, 597.75], [66.0, 641.4444444444446], [67.0, 602.125], [68.0, 557.4615384615386], [70.0, 1877.333333333333], [71.0, 580.0], [69.0, 9126.0], [72.0, 534.9130434782611], [73.0, 652.0], [74.0, 704.0], [75.0, 524.1428571428571], [76.0, 1330.7777777777778], [77.0, 2600.5], [78.0, 742.6], [79.0, 846.0], [80.0, 736.3333333333334], [81.0, 595.1333333333333], [82.0, 720.5714285714286], [83.0, 1183.5], [84.0, 1357.1250000000005], [85.0, 770.8], [86.0, 593.0833333333334], [87.0, 1006.6], [88.0, 740.0], [89.0, 2542.5], [90.0, 1671.5], [91.0, 729.625], [92.0, 1168.0], [93.0, 929.4285714285714], [94.0, 1943.0], [95.0, 1986.0], [97.0, 1182.0], [98.0, 1070.3333333333333], [99.0, 995.1250000000001], [100.0, 768.9166666666665], [101.0, 664.875], [102.0, 825.5454545454546], [103.0, 4189.5], [104.0, 1440.157894736842], [105.0, 1161.0], [106.0, 1091.0], [107.0, 907.5], [108.0, 704.5], [109.0, 1258.0], [110.0, 1037.857142857143], [111.0, 1344.0], [112.0, 1153.0], [113.0, 1245.3333333333333], [114.0, 1055.0], [115.0, 3875.583333333333], [116.0, 1289.5], [117.0, 1188.5], [118.0, 1192.0], [119.0, 505.0], [120.0, 992.2], [121.0, 1331.5555555555557], [122.0, 796.0], [123.0, 764.0], [124.0, 992.0], [125.0, 1085.1], [126.0, 893.0], [127.0, 2441.222222222222], [129.0, 1111.625], [128.0, 1905.0], [130.0, 1483.2], [131.0, 1349.3333333333335], [132.0, 2545.0], [133.0, 1925.5], [135.0, 1482.6666666666665], [134.0, 1576.0], [136.0, 1319.3333333333333], [137.0, 856.2], [139.0, 1666.4], [140.0, 1707.5], [141.0, 1498.8], [142.0, 1158.8], [143.0, 2233.625], [144.0, 1229.3636363636363], [145.0, 1245.1666666666667], [146.0, 1919.1111111111106], [147.0, 1413.2], [148.0, 888.6666666666666], [149.0, 1462.125], [150.0, 716.0833333333333], [151.0, 1160.3333333333333], [152.0, 1296.8], [153.0, 887.625], [154.0, 1226.5], [155.0, 993.4], [156.0, 4794.0], [157.0, 1619.75], [158.0, 1117.8], [159.0, 1536.3333333333333], [160.0, 933.0], [161.0, 2687.666666666667], [162.0, 1301.75], [163.0, 1599.625], [164.0, 1016.4285714285714], [165.0, 1784.5], [166.0, 1250.3333333333333], [167.0, 933.3333333333333], [169.0, 1702.0], [170.0, 5294.0], [171.0, 1330.0], [172.0, 1668.5], [173.0, 3651.5], [174.0, 1872.6666666666667], [175.0, 8137.0], [176.0, 904.0], [177.0, 1874.25], [178.0, 2615.4], [179.0, 1516.5454545454545], [180.0, 2273.3333333333335], [181.0, 1879.25], [182.0, 1048.4166666666665], [183.0, 1719.0], [184.0, 1860.6923076923078], [185.0, 916.6666666666666], [186.0, 1333.230769230769], [187.0, 2047.5], [188.0, 1429.8749999999998], [189.0, 752.52], [190.0, 1848.4], [191.0, 1633.0], [192.0, 1849.4], [193.0, 1757.0], [194.0, 2238.2777777777774], [195.0, 1444.4], [196.0, 1100.0], [198.0, 1642.4], [197.0, 1001.4999999999999], [199.0, 1147.3], [200.0, 1973.0], [201.0, 1391.8333333333335], [202.0, 3442.0], [203.0, 2827.5], [204.0, 1647.5], [205.0, 2059.5], [206.0, 762.2], [207.0, 1619.5714285714287], [208.0, 2021.857142857143], [209.0, 1117.8333333333335], [210.0, 1582.1250000000002], [211.0, 1523.7692307692307], [212.0, 1036.9999999999998], [213.0, 1031.888888888889], [214.0, 1947.0], [215.0, 1995.0], [216.0, 835.5384615384617], [217.0, 909.2], [218.0, 2809.0], [219.0, 1221.75], [220.0, 3292.2], [221.0, 1552.7000000000003], [222.0, 1783.857142857143], [223.0, 1546.8], [224.0, 1916.8333333333333], [225.0, 5739.0], [226.0, 1321.7692307692307], [227.0, 1559.5], [228.0, 1127.0000000000002], [229.0, 3866.2], [230.0, 1458.0], [231.0, 2439.1], [232.0, 986.5238095238095], [233.0, 1058.375], [234.0, 3298.0], [235.0, 2640.928571428571], [236.0, 1600.6363636363637], [237.0, 1705.5384615384614], [238.0, 1471.0], [239.0, 2861.0], [240.0, 1876.75], [241.0, 1619.4], [242.0, 1922.0], [243.0, 2145.6666666666665], [244.0, 1248.5], [245.0, 1725.3], [246.0, 1382.8333333333333], [247.0, 1806.2], [248.0, 1220.3333333333335], [249.0, 1134.1666666666667], [251.0, 2738.4], [250.0, 1746.3333333333335], [252.0, 2042.3076923076922], [253.0, 2099.4], [254.0, 1148.7777777777778], [255.0, 2154.4736842105262], [257.0, 2782.142857142857], [256.0, 1405.3000000000002], [258.0, 1156.1818181818182], [259.0, 3519.6666666666665], [260.0, 1309.1428571428573], [261.0, 2269.0], [262.0, 2546.6666666666665], [263.0, 1537.5714285714287], [264.0, 876.1428571428573], [270.0, 1431.5384615384617], [271.0, 3851.0], [268.0, 2493.25], [269.0, 2305.0], [266.0, 1391.0], [267.0, 1590.4444444444443], [265.0, 974.8333333333334], [273.0, 2191.3333333333335], [272.0, 1175.8461538461538], [274.0, 2459.0], [275.0, 1671.6666666666667], [276.0, 2146.5], [277.0, 1551.0000000000002], [278.0, 2390.0], [279.0, 1529.6], [280.0, 3561.8333333333335], [286.0, 1252.4444444444441], [284.0, 1375.1666666666665], [285.0, 2775.3333333333335], [281.0, 1794.4166666666667], [282.0, 1901.8333333333335], [283.0, 2422.5], [289.0, 1309.75], [288.0, 1516.076923076923], [290.0, 2567.8], [291.0, 1769.25], [292.0, 1577.3636363636363], [293.0, 2981.5], [295.0, 2293.714285714286], [296.0, 2543.6], [302.0, 6099.0], [303.0, 1520.0], [300.0, 3063.6554838709685], [301.0, 2810.6666666666665], [297.0, 3137.5], [298.0, 2200.0], [299.0, 4522.2], [305.0, 2577.7142857142853], [304.0, 4399.833333333333], [306.0, 2017.9230769230771], [307.0, 3202.5], [308.0, 1901.0833333333335], [309.0, 3689.3333333333335], [311.0, 2048.625], [312.0, 1142.25], [318.0, 3141.0], [319.0, 1763.7500000000002], [316.0, 4046.222222222222], [317.0, 1500.9999999999998], [313.0, 2716.8571428571427], [314.0, 863.0], [315.0, 3574.1250000000005], [321.0, 1831.857142857143], [320.0, 2398.0909090909095], [322.0, 1869.5555555555557], [323.0, 1336.6666666666667], [324.0, 1754.5], [325.0, 548.6666666666666], [326.0, 2527.0], [327.0, 2553.25], [328.0, 832.7058823529412], [334.0, 3161.0], [335.0, 1845.6666666666665], [332.0, 3533.5], [333.0, 2343.6666666666665], [329.0, 5726.333333333334], [330.0, 3269.5], [331.0, 3769.0], [337.0, 3569.3333333333335], [336.0, 4287.666666666667], [339.0, 1357.3125], [338.0, 1845.3333333333333], [348.0, 2976.2], [349.0, 2213.0], [350.0, 2914.7142857142853], [351.0, 3039.75], [340.0, 860.1111111111111], [341.0, 2873.5], [342.0, 3010.636363636363], [344.0, 2674.2], [343.0, 1909.75], [345.0, 1809.3749999999998], [346.0, 2772.5], [347.0, 2864.0], [354.0, 2181.9375], [353.0, 5183.5], [355.0, 3730.0], [364.0, 2581.0], [365.0, 2885.833333333333], [366.0, 2459.666666666667], [367.0, 3107.777777777778], [357.0, 1926.2000000000003], [356.0, 617.5], [358.0, 1912.857142857143], [359.0, 2865.0], [352.0, 689.5555555555557], [360.0, 2812.7999999999997], [361.0, 1877.0], [362.0, 3299.333333333333], [363.0, 1814.9411764705883], [369.0, 3299.6666666666665], [368.0, 3293.2000000000007], [370.0, 2699.0], [371.0, 2791.1666666666665], [372.0, 2558.2], [373.0, 3821.2857142857138], [374.0, 2133.8888888888887], [375.0, 4543.5], [376.0, 1625.2500000000002], [383.0, 2575.588235294117], [382.0, 2028.5652173913045], [380.0, 3625.625], [381.0, 2661.2], [377.0, 2178.153846153846], [378.0, 2682.0], [379.0, 2967.4444444444443], [385.0, 3616.0], [384.0, 3567.3999999999996], [386.0, 2791.090909090909], [387.0, 2400.0], [388.0, 2816.4285714285716], [390.0, 3581.3333333333335], [389.0, 1682.2142857142853], [391.0, 3404.6666666666665], [392.0, 3409.6], [398.0, 2536.9], [399.0, 2034.5], [396.0, 2441.576923076923], [397.0, 2039.8333333333335], [393.0, 1569.041666666667], [394.0, 3108.166666666667], [395.0, 1244.666666666667], [401.0, 4317.857142857143], [400.0, 3962.9166666666665], [402.0, 1665.0], [403.0, 1292.6923076923076], [405.0, 2065.5], [404.0, 3591.3333333333335], [406.0, 2974.8], [407.0, 2251.4444444444443], [408.0, 2644.6363636363635], [414.0, 1683.857142857143], [415.0, 2577.6666666666665], [412.0, 2521.0909090909095], [413.0, 2961.5], [409.0, 3647.25], [410.0, 2309.071428571428], [411.0, 3082.2], [417.0, 2609.1], [416.0, 882.0], [418.0, 3147.5], [419.0, 3814.6666666666665], [420.0, 3827.6666666666665], [421.0, 1646.5], [422.0, 4017.166666666666], [423.0, 2154.0769230769233], [424.0, 1738.888888888889], [430.0, 3212.285714285714], [431.0, 4080.75], [428.0, 1472.1111111111109], [429.0, 3757.5], [425.0, 2226.0], [426.0, 2378.5], [427.0, 1482.777777777778], [434.0, 1955.7272727272725], [433.0, 2036.4999999999998], [432.0, 1243.3846153846155], [435.0, 4153.0], [444.0, 4109.2], [445.0, 4483.0], [446.0, 1627.1818181818178], [447.0, 766.25], [436.0, 2732.714285714286], [437.0, 1666.6666666666667], [438.0, 3420.0], [439.0, 4107.0], [440.0, 4098.666666666667], [441.0, 3359.0], [442.0, 1659.7333333333331], [443.0, 4145.0], [449.0, 2038.0], [448.0, 2094.7999999999997], [450.0, 2456.5555555555557], [451.0, 2466.6000000000004], [452.0, 2632.8888888888887], [453.0, 2870.6666666666665], [454.0, 2366.3333333333335], [455.0, 2573.0], [456.0, 2321.25], [462.0, 1602.5555555555557], [463.0, 2398.4444444444443], [460.0, 3262.6], [461.0, 4089.2], [458.0, 2641.0], [459.0, 2528.875], [457.0, 1745.5675675675675], [465.0, 3286.8571428571427], [464.0, 2800.181818181819], [466.0, 2754.3571428571427], [467.0, 2054.55], [468.0, 1934.6470588235295], [469.0, 1999.1538461538466], [470.0, 1769.5384615384614], [471.0, 2556.2999999999997], [472.0, 4259.166666666666], [478.0, 3689.8], [479.0, 2783.5714285714284], [476.0, 3861.0], [477.0, 2701.2500000000005], [473.0, 3962.6666666666665], [474.0, 2959.857142857143], [475.0, 1748.9999999999998], [481.0, 4161.5], [480.0, 4594.0], [482.0, 1744.8095238095236], [483.0, 4331.4], [484.0, 1951.846153846154], [485.0, 2150.8823529411766], [486.0, 5240.25], [487.0, 2068.0], [488.0, 1864.0], [495.0, 3887.7142857142853], [494.0, 3014.9285714285716], [492.0, 2301.7], [493.0, 3327.3636363636365], [489.0, 3657.857142857143], [490.0, 3806.818181818182], [491.0, 3727.727272727273], [497.0, 3443.625], [496.0, 3501.8888888888887], [498.0, 1924.909090909091], [499.0, 3894.6250000000005], [500.0, 3526.0], [501.0, 2877.0], [502.0, 3244.222222222222], [503.0, 1642.3125000000002], [504.0, 2949.5], [510.0, 3072.7058823529414], [511.0, 3730.9999999999995], [508.0, 2535.25], [509.0, 2634.8823529411766], [505.0, 4696.0], [506.0, 3445.333333333333], [507.0, 4351.4], [515.0, 3080.4444444444443], [512.0, 3822.4], [526.0, 3626.166666666667], [527.0, 1956.6999999999998], [524.0, 2937.625], [525.0, 3662.1111111111113], [522.0, 3613.125], [523.0, 2296.823529411765], [513.0, 3474.777777777778], [514.0, 2990.0833333333335], [516.0, 3142.857142857143], [517.0, 2393.0909090909095], [518.0, 3192.5384615384614], [519.0, 2399.0], [528.0, 2311.5], [529.0, 1408.8571428571427], [542.0, 2013.1935483870964], [543.0, 4015.124999999999], [540.0, 4063.75], [541.0, 2472.625], [538.0, 2881.6666666666665], [539.0, 4064.1428571428573], [536.0, 2518.0], [537.0, 1603.25], [530.0, 2542.125], [531.0, 2488.5625], [532.0, 1473.9166666666665], [533.0, 2235.857142857142], [534.0, 4753.4], [535.0, 2317.4210526315787], [520.0, 1960.111111111111], [521.0, 2202.294117647059], [547.0, 2547.4736842105267], [544.0, 3793.4285714285716], [558.0, 3512.1666666666665], [559.0, 2428.65], [556.0, 3424.5000000000005], [557.0, 2462.7142857142853], [555.0, 2218.625], [554.0, 5284.333333333333], [545.0, 1821.4166666666667], [546.0, 1382.793103448276], [548.0, 1863.2857142857147], [549.0, 3333.2727272727275], [550.0, 2454.857142857143], [551.0, 3096.705882352941], [560.0, 2413.9999999999995], [575.0, 4242.666666666667], [573.0, 5851.75], [574.0, 2281.3437499999995], [571.0, 4322.75], [572.0, 3402.3333333333335], [568.0, 2159.2941176470586], [569.0, 2920.1111111111113], [570.0, 4818.0], [561.0, 2298.0], [562.0, 4790.75], [563.0, 2556.727272727273], [564.0, 3577.958333333333], [565.0, 2459.0909090909086], [566.0, 2185.0], [567.0, 4504.0], [552.0, 2679.3461538461543], [553.0, 5378.75], [579.0, 2540.1428571428573], [576.0, 2624.294117647058], [590.0, 4780.0], [591.0, 2475.5], [588.0, 1965.9795918367338], [589.0, 2374.7941176470586], [586.0, 2395.7499999999995], [587.0, 3060.9999999999995], [577.0, 3110.357142857142], [578.0, 2724.4444444444443], [580.0, 2337.3125000000005], [581.0, 2813.0], [582.0, 2973.8846153846152], [583.0, 2906.75], [592.0, 1983.3448275862072], [606.0, 2773.5], [607.0, 2844.9777777777776], [604.0, 2567.5531914893627], [605.0, 3618.2903225806454], [602.0, 3127.848101265824], [603.0, 2746.785714285714], [600.0, 3124.8927165354303], [601.0, 3191.6388888888887], [593.0, 2395.238095238095], [594.0, 1952.8235294117646], [595.0, 7477.8], [596.0, 2418.8695652173915], [597.0, 2438.2187499999995], [598.0, 1648.0444444444443], [599.0, 2813.631578947369], [584.0, 2233.2894736842104], [585.0, 4822.0], [611.0, 3145.6538461538457], [608.0, 3841.6538461538466], [622.0, 5904.6], [623.0, 4094.3846153846157], [620.0, 3953.566666666666], [621.0, 5357.5], [618.0, 3093.2307692307695], [619.0, 4136.0], [609.0, 4923.0], [610.0, 2860.5116279069766], [612.0, 6609.333333333334], [613.0, 5973.166666666667], [614.0, 5482.142857142858], [615.0, 4055.142857142857], [624.0, 3504.3571428571427], [638.0, 3158.727272727273], [639.0, 5811.375], [636.0, 5014.849999999999], [637.0, 4165.884615384615], [634.0, 2753.190476190476], [635.0, 4394.333333333333], [632.0, 3196.166666666667], [633.0, 8924.7], [625.0, 3483.9375], [626.0, 2564.136363636363], [627.0, 3424.8695652173915], [628.0, 2424.1428571428573], [629.0, 3215.882352941177], [631.0, 4249.25], [630.0, 2651.1714285714284], [616.0, 4720.75], [617.0, 6088.333333333334], [646.0, 3105.25], [641.0, 2964.483333333333], [640.0, 4116.6], [654.0, 2758.9545454545455], [655.0, 2670.3333333333335], [652.0, 4786.222222222223], [653.0, 2800.75], [650.0, 3806.523809523809], [651.0, 2692.9999999999995], [643.0, 2265.2857142857147], [642.0, 2363.0], [644.0, 7227.333333333333], [645.0, 5260.428571428572], [647.0, 4828.0], [664.0, 2931.692307692308], [665.0, 3195.7272727272725], [666.0, 3407.5909090909095], [668.0, 2967.2999999999997], [669.0, 2970.774193548387], [670.0, 2496.285714285714], [671.0, 4731.818181818182], [667.0, 3967.125], [656.0, 3209.333333333333], [657.0, 3096.681818181818], [658.0, 5561.0], [659.0, 3742.9999999999995], [661.0, 3115.071428571429], [662.0, 3869.85], [663.0, 6246.900000000001], [660.0, 2726.9166666666665], [648.0, 3970.7000000000003], [649.0, 5329.2307692307695], [675.0, 2881.8461538461534], [672.0, 3238.833333333333], [686.0, 4393.411764705881], [687.0, 3475.0], [684.0, 4040.285714285714], [685.0, 4052.0], [682.0, 6554.333333333333], [683.0, 3950.3333333333335], [673.0, 3926.125], [674.0, 3269.5], [676.0, 3219.217391304348], [677.0, 3694.2], [678.0, 2134.782608695652], [679.0, 2509.6470588235293], [688.0, 2384.0], [703.0, 3529.6363636363635], [701.0, 3048.407407407407], [702.0, 3446.480000000001], [699.0, 5262.583333333333], [700.0, 2939.5714285714284], [696.0, 2561.3500000000004], [697.0, 4684.583333333333], [698.0, 3428.1739130434785], [689.0, 5031.666666666667], [690.0, 2957.4375000000005], [691.0, 4924.444444444444], [692.0, 2585.3333333333335], [693.0, 2853.366666666666], [694.0, 4666.777777777777], [695.0, 3077.956521739131], [680.0, 3961.25], [681.0, 3386.6923076923076], [707.0, 4752.000000000001], [704.0, 2964.421052631579], [718.0, 4634.105263157894], [719.0, 4101.0], [716.0, 3494.6363636363635], [717.0, 2417.2666666666673], [714.0, 3560.3448275862074], [715.0, 3270.2999999999997], [705.0, 5100.0], [706.0, 1702.0909090909095], [708.0, 3113.210526315789], [709.0, 4020.2], [710.0, 4066.125], [711.0, 4426.388888888889], [720.0, 4703.416666666666], [734.0, 3087.6333333333337], [735.0, 2866.3333333333335], [732.0, 3248.1333333333337], [733.0, 3407.4999999999995], [730.0, 3317.0000000000005], [731.0, 3055.714285714286], [728.0, 3170.416666666667], [729.0, 2750.820512820513], [721.0, 3841.8999999999996], [722.0, 3976.6666666666665], [723.0, 4413.0], [724.0, 3963.000000000001], [725.0, 3614.818181818182], [726.0, 3312.1199999999994], [727.0, 1930.1304347826087], [712.0, 3904.3333333333335], [713.0, 2878.8235294117653], [739.0, 3347.5], [736.0, 5376.714285714286], [750.0, 2848.7333333333336], [751.0, 3282.714285714286], [748.0, 3768.0909090909095], [749.0, 4373.682926829269], [746.0, 4057.977777777778], [747.0, 3813.3030303030305], [737.0, 4970.928571428571], [738.0, 3172.777777777778], [740.0, 4452.166666666666], [741.0, 4236.395833333334], [742.0, 2544.0312500000005], [744.0, 4381.333333333334], [745.0, 3708.444444444444], [743.0, 5243.363636363636], [752.0, 2826.4], [766.0, 2533.882352941177], [767.0, 3478.2999999999997], [764.0, 4009.40909090909], [765.0, 3071.5], [762.0, 2705.5], [763.0, 4358.323529411766], [760.0, 3332.555555555555], [761.0, 5135.181818181818], [753.0, 3052.6], [754.0, 4072.4444444444443], [755.0, 3023.8571428571427], [756.0, 3435.0], [757.0, 3533.0], [758.0, 3547.9230769230767], [759.0, 4291.8], [771.0, 4227.6875], [768.0, 3434.8888888888887], [782.0, 2841.962962962963], [783.0, 4081.7808219178087], [780.0, 4853.6], [781.0, 3130.4500000000003], [778.0, 4861.272727272727], [779.0, 4628.0], [769.0, 2312.5], [770.0, 3369.115384615385], [772.0, 3761.923076923077], [773.0, 3932.5454545454545], [774.0, 5989.428571428571], [775.0, 4326.666666666667], [784.0, 2966.8999999999996], [798.0, 2331.3600000000006], [799.0, 2823.9599999999996], [796.0, 3488.5555555555557], [797.0, 3752.5], [794.0, 3197.8125], [795.0, 3082.541666666667], [792.0, 5068.857142857143], [793.0, 3146.9047619047624], [785.0, 3747.806451612904], [786.0, 5224.0], [787.0, 6899.25], [789.0, 6594.25], [790.0, 3700.875], [791.0, 4872.8], [788.0, 3101.0000000000005], [776.0, 5623.8], [777.0, 4773.868421052631], [803.0, 3176.3333333333335], [800.0, 4929.142857142857], [814.0, 3416.818181818182], [815.0, 5704.125], [812.0, 3374.5], [813.0, 3304.210526315789], [810.0, 5144.187499999999], [811.0, 6295.315789473684], [801.0, 3123.2352941176473], [804.0, 6003.25], [802.0, 4728.0], [805.0, 2883.333333333333], [806.0, 3632.8571428571427], [807.0, 4184.29268292683], [816.0, 4340.758620689656], [830.0, 4756.222222222223], [831.0, 5475.0], [828.0, 3292.714285714286], [829.0, 4229.999999999999], [826.0, 5761.882352941177], [827.0, 4935.111111111111], [824.0, 3681.518518518518], [825.0, 4480.40625], [817.0, 2939.3928571428573], [819.0, 3194.2], [820.0, 4950.105263157894], [821.0, 3071.0000000000005], [822.0, 5244.900000000001], [823.0, 2522.756756756757], [818.0, 4001.5833333333335], [808.0, 5630.0], [809.0, 2552.25], [835.0, 3373.870967741935], [832.0, 3905.103448275862], [846.0, 3760.6388888888896], [847.0, 5466.5], [844.0, 2919.285714285714], [845.0, 3465.0416666666665], [842.0, 2888.605263157894], [843.0, 3280.3714285714286], [834.0, 3137.0], [833.0, 5397.75], [836.0, 2424.166666666667], [837.0, 3582.3999999999996], [838.0, 4500.352941176469], [839.0, 3564.0454545454545], [848.0, 6245.642857142857], [862.0, 5007.648648648649], [863.0, 4725.454545454545], [860.0, 3377.1153846153848], [861.0, 3476.517647058824], [858.0, 3886.1249999999995], [859.0, 2803.7], [856.0, 3580.7499999999995], [857.0, 3909.611111111111], [849.0, 4932.5], [850.0, 3406.5], [851.0, 3411.285714285714], [852.0, 4565.833333333333], [853.0, 3900.2857142857147], [854.0, 5049.923076923077], [855.0, 3133.217391304348], [840.0, 2825.0588235294117], [841.0, 3311.7142857142853], [867.0, 3370.611111111111], [864.0, 3166.814814814814], [879.0, 3507.0333333333324], [878.0, 5416.375000000001], [876.0, 3520.575], [877.0, 4380.75], [874.0, 3402.736842105264], [875.0, 4045.176470588235], [865.0, 3221.3529411764703], [866.0, 3446.353846153847], [868.0, 3609.785714285714], [869.0, 4414.5], [870.0, 2187.933333333333], [871.0, 3925.0909090909095], [880.0, 3041.0666666666666], [895.0, 3243.3999999999996], [892.0, 2830.264705882353], [893.0, 3185.714285714286], [894.0, 3483.25], [890.0, 3292.7], [891.0, 3328.1249999999995], [888.0, 3965.5], [889.0, 3808.7187500000005], [881.0, 3273.0625000000005], [882.0, 3412.2105263157896], [883.0, 4511.25], [884.0, 4128.2941176470595], [885.0, 2819.3478260869565], [886.0, 3196.1304347826085], [887.0, 4663.222222222223], [872.0, 4672.799999999999], [873.0, 3543.3571428571427], [896.0, 3224.6470588235293], [897.0, 2978.5348837209312], [898.0, 4698.333333333334], [899.0, 3765.2499999999995], [900.0, 4562.0615221426715]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[630.1721032132456, 3310.448028237548]], "isOverall": false, "label": "HTTP Request - Index-Aggregated", "isController": false}, {"data": [[12.0, 244.0], [13.0, 234.0], [14.0, 253.5], [16.0, 236.0], [17.0, 249.0], [18.0, 236.0], [20.0, 368.0], [22.0, 356.0], [23.0, 387.0], [24.0, 260.0], [27.0, 267.2], [28.0, 354.25], [29.0, 406.5], [30.0, 368.5], [31.0, 363.0], [33.0, 348.25], [34.0, 282.25000000000006], [35.0, 481.0], [37.0, 236.0], [36.0, 240.0], [38.0, 289.0], [39.0, 367.5], [40.0, 364.42857142857144], [41.0, 441.25], [43.0, 235.375], [44.0, 301.5], [45.0, 355.71428571428567], [46.0, 276.3571428571429], [47.0, 356.6], [48.0, 350.0], [49.0, 303.6666666666667], [50.0, 261.85714285714283], [51.0, 246.6], [52.0, 320.0], [53.0, 293.2222222222223], [54.0, 266.2666666666667], [55.0, 319.75], [56.0, 393.5], [57.0, 281.5], [58.0, 372.6666666666667], [59.0, 277.3333333333333], [60.0, 265.9285714285714], [61.0, 306.6], [62.0, 356.0], [63.0, 333.6666666666667], [64.0, 394.5], [65.0, 391.6], [66.0, 497.75], [67.0, 298.0], [68.0, 260.1538461538461], [69.0, 480.6666666666667], [70.0, 379.2], [71.0, 451.6666666666667], [72.0, 271.44], [73.0, 333.22222222222223], [74.0, 519.5], [75.0, 423.2], [76.0, 325.49999999999994], [77.0, 332.2], [78.0, 371.0], [79.0, 239.5], [80.0, 429.2], [81.0, 273.18181818181813], [82.0, 593.8], [83.0, 423.0], [84.0, 445.0], [85.0, 771.0], [86.0, 296.0869565217391], [87.0, 415.5], [88.0, 890.3333333333334], [89.0, 531.5], [90.0, 932.0], [91.0, 557.1], [92.0, 943.0], [93.0, 776.0], [94.0, 853.6666666666666], [95.0, 402.88888888888886], [96.0, 821.2], [97.0, 844.75], [98.0, 1033.6666666666667], [99.0, 412.8], [100.0, 372.1666666666667], [101.0, 488.7142857142857], [102.0, 411.22222222222223], [103.0, 622.0], [104.0, 429.0769230769231], [105.0, 823.5], [106.0, 595.1428571428572], [107.0, 823.5], [108.0, 783.7272727272727], [109.0, 2169.6], [110.0, 652.6666666666666], [111.0, 935.0], [112.0, 840.0], [113.0, 1103.0], [114.0, 914.6666666666666], [115.0, 477.6666666666667], [116.0, 969.6666666666666], [117.0, 848.0], [118.0, 1020.3333333333334], [119.0, 1003.5], [120.0, 1850.6666666666665], [121.0, 1596.4], [122.0, 1698.7142857142856], [123.0, 595.4444444444445], [124.0, 1031.0], [125.0, 1090.0], [126.0, 680.0], [127.0, 944.625], [128.0, 572.0], [129.0, 791.2], [130.0, 3184.666666666667], [131.0, 1271.0], [132.0, 1157.0], [133.0, 853.8333333333333], [134.0, 1041.6], [135.0, 1318.75], [136.0, 881.1666666666666], [137.0, 2093.6666666666665], [138.0, 856.6], [139.0, 1096.4285714285716], [140.0, 1206.6666666666667], [141.0, 1092.0], [142.0, 1431.25], [143.0, 904.3333333333334], [144.0, 699.7857142857143], [145.0, 1123.3333333333333], [146.0, 707.1999999999999], [147.0, 874.5], [148.0, 1204.25], [149.0, 1476.111111111111], [150.0, 372.75], [151.0, 700.8571428571429], [152.0, 598.3333333333334], [153.0, 804.0], [154.0, 1386.8333333333335], [155.0, 1138.4], [156.0, 990.3333333333333], [157.0, 970.25], [158.0, 700.1111111111112], [159.0, 1112.0], [160.0, 1378.75], [161.0, 2353.5], [162.0, 1244.0], [164.0, 2492.0], [166.0, 954.2], [165.0, 3521.6666666666665], [167.0, 681.1666666666667], [163.0, 777.0], [168.0, 1488.4444444444443], [169.0, 2371.6], [170.0, 781.2], [171.0, 4339.333333333334], [172.0, 1349.6666666666667], [173.0, 1249.25], [174.0, 1561.6666666666665], [175.0, 2577.0], [176.0, 1273.0], [177.0, 1334.6], [178.0, 1788.4285714285713], [180.0, 748.3846153846155], [181.0, 1639.6666666666667], [182.0, 660.5555555555555], [183.0, 1364.8], [179.0, 1113.25], [184.0, 716.3076923076924], [185.0, 1150.8571428571427], [186.0, 821.4166666666666], [187.0, 1759.75], [189.0, 1028.125], [190.0, 966.7272727272727], [191.0, 1479.75], [188.0, 7744.0], [192.0, 1947.0], [193.0, 1362.0], [194.0, 638.0], [195.0, 1186.75], [196.0, 1012.5], [197.0, 2666.6666666666665], [198.0, 1215.75], [199.0, 775.4], [200.0, 1148.8], [201.0, 454.2222222222222], [202.0, 1104.6666666666667], [203.0, 901.0], [204.0, 1077.1666666666665], [205.0, 1136.5714285714287], [206.0, 1119.0], [207.0, 1354.6666666666667], [208.0, 839.8], [209.0, 995.7333333333335], [210.0, 2050.0], [211.0, 821.875], [212.0, 970.5714285714287], [213.0, 1915.5], [214.0, 1919.75], [215.0, 1908.75], [216.0, 1002.8666666666666], [217.0, 933.590909090909], [218.0, 1107.0], [219.0, 1513.2], [221.0, 976.2222222222224], [222.0, 1303.2], [223.0, 976.125], [224.0, 3052.4], [225.0, 1679.0], [226.0, 2979.6666666666665], [227.0, 1729.5], [228.0, 954.875], [229.0, 1622.3333333333333], [230.0, 2670.5], [231.0, 812.8], [232.0, 794.9999999999999], [233.0, 1251.5], [234.0, 846.3529411764707], [235.0, 857.5], [236.0, 1363.0769230769233], [237.0, 1546.0], [238.0, 1983.0], [239.0, 1587.0], [240.0, 1281.5], [242.0, 1986.2857142857142], [241.0, 1807.7142857142858], [243.0, 569.2], [244.0, 3301.1666666666665], [245.0, 1571.5714285714284], [246.0, 1140.142857142857], [247.0, 2330.2], [248.0, 1219.8], [249.0, 1055.3846153846152], [250.0, 1500.0], [251.0, 1169.1428571428573], [252.0, 1555.6470588235295], [253.0, 709.3333333333334], [254.0, 4329.0], [255.0, 1511.7333333333333], [257.0, 1499.0], [256.0, 1043.5], [258.0, 1810.25], [259.0, 749.1428571428572], [260.0, 820.6], [261.0, 1909.25], [262.0, 2351.0], [264.0, 724.5], [270.0, 503.181818181818], [271.0, 1923.8], [268.0, 1703.75], [269.0, 1002.0000000000001], [265.0, 1522.0714285714284], [266.0, 1518.857142857143], [267.0, 1886.6], [263.0, 1657.7142857142858], [273.0, 1685.25], [272.0, 2930.1428571428573], [274.0, 6296.5], [275.0, 1926.25], [276.0, 2698.3333333333335], [277.0, 1530.5], [278.0, 2227.1666666666665], [280.0, 1970.2], [286.0, 1534.5294117647056], [287.0, 2402.75], [284.0, 2585.5], [285.0, 2901.5], [281.0, 1360.6666666666667], [283.0, 2347.25], [279.0, 3619.5], [290.0, 1692.8333333333335], [288.0, 1631.0666666666668], [289.0, 947.5294117647059], [291.0, 2076.0], [300.0, 2850.5020408163296], [301.0, 2754.833333333333], [302.0, 3009.166666666667], [303.0, 2377.6666666666665], [292.0, 2013.6000000000004], [293.0, 5498.666666666666], [294.0, 2973.6], [295.0, 3090.6666666666665], [296.0, 3592.0], [297.0, 914.0], [298.0, 3616.5], [299.0, 2585.0], [305.0, 3077.0], [304.0, 1997.75], [306.0, 1220.9375], [307.0, 3487.4], [308.0, 2645.0], [309.0, 2906.75], [310.0, 2810.6666666666665], [311.0, 1176.875], [312.0, 1342.2499999999995], [318.0, 704.8181818181819], [319.0, 1295.125], [316.0, 3049.75], [317.0, 2042.8333333333335], [313.0, 3491.0], [314.0, 2000.4], [315.0, 2501.6923076923076], [321.0, 4673.333333333333], [320.0, 1046.5217391304345], [322.0, 4646.333333333333], [323.0, 1558.0000000000005], [324.0, 2917.0], [325.0, 1718.7272727272727], [326.0, 4333.8], [328.0, 1650.0], [334.0, 1380.8750000000002], [335.0, 2760.142857142857], [332.0, 2856.0], [333.0, 1404.7999999999997], [329.0, 2961.0], [330.0, 2546.0], [331.0, 2486.818181818182], [327.0, 3555.8333333333335], [337.0, 2428.4], [336.0, 2106.0], [338.0, 2937.875], [339.0, 1214.6000000000001], [340.0, 2614.6], [343.0, 1502.6250000000002], [342.0, 1250.3636363636363], [341.0, 1269.5], [344.0, 5288.333333333334], [351.0, 2081.0], [348.0, 2290.0], [349.0, 1184.875], [350.0, 1701.5000000000002], [345.0, 1230.5], [346.0, 3342.0], [347.0, 3529.5], [353.0, 3681.3333333333335], [352.0, 1036.2941176470588], [354.0, 958.3684210526317], [355.0, 2449.8], [356.0, 1655.7692307692305], [358.0, 1914.6666666666667], [357.0, 3422.333333333333], [359.0, 2069.0], [360.0, 1688.9444444444446], [367.0, 3650.4], [365.0, 1082.3333333333333], [364.0, 4154.0], [366.0, 692.3529411764706], [361.0, 1388.8333333333335], [362.0, 2904.3333333333335], [363.0, 1368.0625000000002], [369.0, 2614.333333333333], [368.0, 1275.0], [371.0, 2172.0], [370.0, 2345.2], [381.0, 4404.666666666666], [382.0, 1170.7142857142856], [383.0, 1017.2727272727273], [380.0, 2497.75], [372.0, 2256.625], [373.0, 3068.0], [374.0, 2111.5], [375.0, 3093.0], [376.0, 2015.4999999999998], [377.0, 1055.6], [378.0, 1897.7142857142858], [385.0, 255.5], [384.0, 1368.6923076923074], [386.0, 3880.6428571428573], [388.0, 1372.1818181818182], [387.0, 1253.3333333333333], [389.0, 1180.5714285714287], [390.0, 5950.5], [391.0, 2561.4], [392.0, 3338.5], [396.0, 1010.7142857142854], [397.0, 2114.625], [398.0, 2149.6], [399.0, 3410.0], [394.0, 2226.75], [393.0, 1391.1333333333334], [395.0, 2592.75], [401.0, 1849.375], [400.0, 1624.25], [402.0, 3345.142857142857], [403.0, 2808.4], [404.0, 3361.6666666666665], [405.0, 1388.5], [406.0, 1439.0], [407.0, 2156.25], [408.0, 1122.3076923076922], [414.0, 773.8148148148148], [415.0, 1389.1904761904764], [412.0, 1040.625], [413.0, 2602.0], [409.0, 3347.6666666666665], [410.0, 1026.3999999999999], [411.0, 3372.1666666666665], [417.0, 2286.3749999999995], [416.0, 2128.5], [418.0, 2702.75], [419.0, 3542.5], [420.0, 3464.0], [421.0, 1585.2000000000003], [422.0, 1408.6000000000001], [423.0, 2363.428571428571], [424.0, 2348.5], [430.0, 1877.4], [431.0, 3209.0], [428.0, 1420.15], [429.0, 3936.5], [425.0, 2073.0], [426.0, 817.2857142857142], [427.0, 2099.625], [433.0, 1379.0], [432.0, 2255.5999999999995], [434.0, 1781.2500000000005], [435.0, 2451.625], [436.0, 2497.625], [437.0, 1432.5454545454547], [438.0, 3866.3333333333335], [439.0, 3692.6666666666665], [441.0, 1702.5], [442.0, 1488.6428571428573], [443.0, 3902.6], [440.0, 3672.8333333333335], [446.0, 2005.571428571429], [447.0, 1962.7692307692307], [444.0, 3867.0], [445.0, 3936.285714285714], [449.0, 1504.7777777777778], [448.0, 2459.4166666666665], [450.0, 2570.7272727272725], [451.0, 1865.75], [452.0, 3278.5714285714284], [453.0, 2773.857142857143], [454.0, 1968.4], [455.0, 4124.2], [456.0, 3873.444444444445], [462.0, 1875.1538461538462], [463.0, 3280.0], [460.0, 1429.5789473684208], [461.0, 3983.5], [457.0, 1686.3333333333333], [458.0, 2027.0], [459.0, 1947.3571428571424], [465.0, 4038.4], [464.0, 3606.3333333333335], [467.0, 1518.4999999999998], [466.0, 657.8333333333335], [476.0, 3986.5], [477.0, 4165.0], [478.0, 1417.5], [479.0, 3068.6250000000005], [468.0, 1543.2105263157894], [469.0, 1519.181818181818], [470.0, 2758.1111111111113], [471.0, 2101.0], [472.0, 3637.6666666666665], [473.0, 2992.25], [474.0, 1553.5], [475.0, 2237.0], [481.0, 4358.333333333333], [480.0, 3914.75], [482.0, 1389.9374999999998], [483.0, 4630.5], [484.0, 2189.7692307692305], [486.0, 3249.75], [485.0, 1295.9499999999998], [487.0, 2048.25], [488.0, 3108.777777777778], [494.0, 1504.923076923077], [495.0, 4242.5], [492.0, 4135.0], [493.0, 2526.8888888888887], [489.0, 2105.6], [490.0, 1357.6666666666665], [491.0, 1288.0], [497.0, 1757.272727272727], [496.0, 3002.0], [498.0, 2395.454545454545], [499.0, 2932.8333333333335], [500.0, 3126.8461538461534], [501.0, 601.5], [502.0, 4129.0], [503.0, 2518.875], [505.0, 4072.4], [504.0, 2388.0], [510.0, 1930.3571428571433], [511.0, 2176.5], [509.0, 1947.3888888888887], [508.0, 1640.733333333333], [506.0, 3208.3333333333335], [507.0, 3931.5], [519.0, 2112.0769230769233], [513.0, 2492.3750000000005], [512.0, 3443.428571428571], [526.0, 4298.0], [527.0, 411.57142857142856], [524.0, 3072.75], [525.0, 2456.0], [514.0, 1676.4615384615388], [515.0, 2910.714285714286], [517.0, 2212.4375], [516.0, 1553.8], [518.0, 1247.3636363636363], [528.0, 1694.4999999999998], [542.0, 1775.8999999999999], [543.0, 2510.6], [540.0, 3077.9999999999995], [541.0, 2186.0], [538.0, 2354.923076923077], [539.0, 2910.0], [536.0, 3121.0833333333335], [537.0, 3283.1666666666665], [529.0, 2370.75], [530.0, 2721.9999999999995], [531.0, 1760.357142857143], [532.0, 2063.3181818181815], [533.0, 1463.5833333333333], [534.0, 4868.75], [535.0, 1600.9999999999998], [520.0, 2161.3076923076924], [521.0, 1966.1666666666665], [522.0, 2084.764705882353], [523.0, 1612.0000000000002], [547.0, 2503.222222222222], [544.0, 2841.1428571428573], [558.0, 3624.2], [559.0, 2800.6363636363635], [556.0, 2799.3999999999996], [557.0, 2375.903225806452], [554.0, 4252.8], [555.0, 3395.714285714286], [545.0, 2271.888888888889], [546.0, 1981.843750000001], [548.0, 3024.555555555555], [549.0, 3100.0], [550.0, 2409.5], [551.0, 2098.4375], [560.0, 1874.75], [574.0, 2047.9756097560974], [575.0, 3078.8000000000006], [572.0, 2040.1818181818182], [573.0, 4147.5], [570.0, 2241.0], [571.0, 3692.5], [569.0, 3000.25], [568.0, 2685.2666666666664], [561.0, 1840.2777777777776], [562.0, 4656.0], [563.0, 3000.285714285714], [564.0, 2099.7500000000005], [565.0, 1811.5000000000002], [566.0, 2646.363636363637], [567.0, 3879.0], [552.0, 1710.8372093023258], [553.0, 3663.4], [582.0, 1794.4545454545455], [578.0, 3033.9999999999995], [576.0, 1730.9090909090912], [577.0, 1790.875], [591.0, 3269.9999999999995], [590.0, 5219.0], [588.0, 1701.75], [589.0, 1969.9999999999998], [586.0, 2629.999999999999], [587.0, 3125.111111111111], [579.0, 1988.1111111111113], [580.0, 2771.0], [581.0, 4934.666666666667], [584.0, 1868.178571428571], [583.0, 3271.333333333333], [600.0, 2576.7188796680493], [601.0, 2817.966666666667], [602.0, 2080.3529411764716], [603.0, 2388.3333333333326], [604.0, 2079.074074074074], [606.0, 2193.513513513514], [605.0, 1688.8709677419356], [607.0, 2068.647727272727], [592.0, 1889.818181818182], [593.0, 2755.538461538461], [594.0, 2001.5], [595.0, 5132.0], [596.0, 1688.7846153846158], [597.0, 2171.1111111111104], [598.0, 2364.867924528303], [599.0, 1717.7666666666664], [585.0, 3333.8333333333335], [611.0, 2771.6153846153848], [608.0, 2119.8888888888896], [622.0, 5737.666666666667], [623.0, 2993.3333333333335], [620.0, 2230.2142857142862], [621.0, 2994.5], [618.0, 2681.4666666666662], [619.0, 2907.5000000000005], [609.0, 2772.7692307692305], [610.0, 2238.0652173913054], [612.0, 3306.8000000000006], [613.0, 5484.0], [614.0, 3109.7999999999997], [615.0, 2820.142857142857], [624.0, 2417.214285714286], [638.0, 2532.0909090909095], [639.0, 3402.625], [636.0, 2532.260869565217], [637.0, 2019.0434782608695], [634.0, 1874.6875], [635.0, 3773.0], [632.0, 4423.166666666667], [633.0, 1757.0000000000002], [625.0, 2339.5882352941176], [626.0, 1996.1538461538462], [627.0, 2511.4], [629.0, 1754.5], [630.0, 2524.0], [631.0, 2857.7], [628.0, 2550.75], [616.0, 3319.0], [617.0, 3704.0], [643.0, 2633.0625000000005], [640.0, 2179.5714285714284], [655.0, 2540.1249999999995], [653.0, 4663.0], [654.0, 2043.9499999999998], [650.0, 3286.8235294117653], [651.0, 4476.5], [652.0, 3187.2666666666664], [641.0, 2272.1999999999994], [642.0, 3233.294117647059], [644.0, 4360.700000000001], [645.0, 3862.1428571428573], [646.0, 2348.9333333333334], [647.0, 5062.2], [656.0, 3207.7272727272725], [670.0, 2165.8421052631584], [671.0, 3659.7500000000005], [668.0, 4103.0], [669.0, 2695.636363636364], [667.0, 3351.733333333333], [666.0, 3044.15], [664.0, 1333.6], [665.0, 4177.888888888888], [657.0, 2125.9999999999995], [658.0, 4566.833333333334], [660.0, 3278.9], [661.0, 3141.6428571428573], [662.0, 2390.3199999999997], [663.0, 3502.9999999999995], [659.0, 3554.181818181818], [648.0, 4110.099999999999], [649.0, 3259.571428571428], [675.0, 2441.636363636364], [672.0, 3864.363636363636], [686.0, 2767.4545454545455], [687.0, 4163.833333333333], [684.0, 4315.0], [685.0, 2913.166666666667], [682.0, 4104.0], [683.0, 4889.8], [673.0, 1626.4285714285716], [674.0, 2950.222222222222], [676.0, 2221.4090909090914], [677.0, 1729.9333333333334], [678.0, 3309.4666666666667], [679.0, 3004.2], [688.0, 6132.25], [702.0, 1993.0], [703.0, 4556.857142857143], [700.0, 4062.3], [701.0, 2528.055555555555], [698.0, 2525.1874999999995], [699.0, 1965.7631578947367], [696.0, 2188.4838709677424], [697.0, 2701.214285714286], [689.0, 5646.625], [690.0, 1905.3181818181822], [691.0, 2829.7857142857138], [692.0, 1962.8529411764707], [693.0, 3039.739130434783], [694.0, 4411.5], [695.0, 2082.9999999999995], [680.0, 4399.444444444444], [681.0, 2579.428571428571], [707.0, 3019.8571428571427], [705.0, 3647.2], [704.0, 2161.8500000000004], [718.0, 2191.318181818182], [719.0, 2327.75], [716.0, 1628.2500000000002], [717.0, 2701.933333333333], [714.0, 1658.6153846153852], [715.0, 2695.928571428571], [706.0, 2614.9444444444453], [708.0, 3056.764705882353], [709.0, 3475.5], [710.0, 2401.809523809524], [711.0, 2236.6], [720.0, 1662.6666666666667], [735.0, 2174.230769230769], [734.0, 2221.7142857142853], [732.0, 1730.8787878787878], [733.0, 2397.4444444444443], [730.0, 2213.6666666666665], [731.0, 2124.8235294117653], [728.0, 1385.7142857142858], [729.0, 1847.4137931034484], [721.0, 4332.25], [722.0, 2270.0], [723.0, 4541.333333333333], [724.0, 1910.0000000000002], [725.0, 1990.6923076923072], [726.0, 1641.4516129032254], [727.0, 2663.7999999999997], [712.0, 3478.428571428571], [713.0, 1417.6315789473686], [739.0, 3311.090909090909], [736.0, 1746.7272727272725], [751.0, 2272.9166666666665], [748.0, 3096.8], [749.0, 1726.9999999999998], [750.0, 2453.125], [746.0, 1937.179104477612], [747.0, 1875.8787878787882], [737.0, 1495.2222222222224], [738.0, 3223.6000000000004], [740.0, 3143.75], [741.0, 1438.333333333333], [742.0, 1765.8095238095236], [743.0, 2770.5384615384614], [752.0, 3225.0769230769233], [766.0, 2509.076923076923], [767.0, 2104.8461538461543], [765.0, 2848.428571428571], [764.0, 1991.8076923076922], [762.0, 3519.333333333333], [763.0, 1603.909090909091], [760.0, 3769.5000000000005], [761.0, 2348.2999999999997], [753.0, 3193.6000000000004], [754.0, 2470.285714285714], [755.0, 2780.333333333333], [756.0, 2678.875], [757.0, 2174.8181818181815], [758.0, 2788.6], [759.0, 2803.0], [744.0, 1728.2], [745.0, 4633.0], [771.0, 1866.3124999999998], [768.0, 2343.642857142857], [783.0, 1762.3709677419358], [781.0, 2350.9], [782.0, 2500.9999999999995], [778.0, 2554.142857142857], [779.0, 3188.5], [780.0, 4039.285714285714], [769.0, 2915.4], [770.0, 2515.8500000000004], [772.0, 2725.7999999999997], [773.0, 1956.0000000000002], [774.0, 2604.444444444444], [775.0, 3292.5], [784.0, 1996.428571428571], [798.0, 2454.842105263158], [799.0, 2393.153846153846], [796.0, 3265.076923076923], [797.0, 4711.666666666667], [795.0, 1725.2962962962963], [794.0, 3807.3076923076924], [792.0, 2645.6923076923076], [793.0, 2349.6470588235293], [785.0, 1860.7749999999999], [786.0, 2266.4000000000005], [787.0, 3179.0000000000005], [788.0, 2361.857142857143], [789.0, 3110.25], [790.0, 4087.166666666667], [791.0, 3882.0], [776.0, 3295.1250000000005], [777.0, 1841.9629629629633], [803.0, 1794.8181818181818], [800.0, 3281.4444444444443], [815.0, 2582.1600000000003], [813.0, 2046.4193548387093], [814.0, 1977.8], [811.0, 1930.3333333333335], [810.0, 1614.888888888889], [812.0, 2651.047619047619], [801.0, 2502.5263157894738], [802.0, 3070.333333333333], [804.0, 3032.125], [805.0, 2944.3333333333335], [806.0, 3363.5555555555557], [807.0, 1957.46511627907], [816.0, 2605.869565217392], [830.0, 3012.307692307692], [831.0, 2383.0], [828.0, 2519.521739130435], [829.0, 3155.4166666666665], [826.0, 1817.5925925925926], [827.0, 3208.3333333333335], [825.0, 2225.6666666666665], [824.0, 2260.2], [817.0, 2351.21875], [818.0, 2450.0], [819.0, 4649.5], [820.0, 1985.3888888888894], [821.0, 2817.0], [822.0, 2418.615384615385], [823.0, 2312.0333333333324], [808.0, 623.0], [809.0, 4328.153846153846], [835.0, 1937.5652173913045], [832.0, 2492.538461538462], [846.0, 2120.3928571428573], [847.0, 2807.9285714285716], [844.0, 3224.5333333333333], [845.0, 2328.548387096775], [842.0, 1994.0943396226417], [843.0, 2467.5833333333335], [833.0, 2774.214285714286], [834.0, 3615.2], [836.0, 3032.105263157895], [837.0, 2049.9599999999996], [838.0, 2995.333333333333], [840.0, 2611.5000000000005], [841.0, 3775.846153846154], [839.0, 2674.5], [848.0, 2750.2727272727275], [862.0, 1807.135135135135], [863.0, 2222.875], [860.0, 2398.5], [861.0, 1989.8850574712646], [858.0, 2116.625], [859.0, 2278.0833333333335], [856.0, 4563.0], [857.0, 2376.944444444445], [849.0, 3426.8333333333335], [850.0, 2739.1], [851.0, 2228.75], [852.0, 2372.8571428571427], [853.0, 1870.3157894736842], [855.0, 2544.6470588235297], [854.0, 1701.3529411764707], [867.0, 2679.875], [864.0, 2292.6000000000004], [878.0, 1966.7333333333338], [879.0, 2019.269230769231], [876.0, 2127.151515151515], [877.0, 3807.6], [874.0, 2135.92857142857], [875.0, 2881.409090909091], [865.0, 1383.1111111111109], [866.0, 1825.923076923077], [868.0, 2273.764705882353], [870.0, 2939.347826086956], [869.0, 1735.6666666666667], [871.0, 4738.714285714285], [880.0, 2769.736842105264], [894.0, 1828.5106382978731], [895.0, 1960.1864406779662], [892.0, 2385.185185185185], [893.0, 3538.1764705882356], [890.0, 3954.8571428571427], [891.0, 2315.555555555556], [888.0, 2141.8536585365855], [889.0, 2103.5555555555557], [881.0, 2323.354838709677], [882.0, 1926.1], [883.0, 3029.307692307692], [884.0, 1947.6500000000003], [885.0, 2026.3571428571424], [886.0, 2233.439999999999], [887.0, 1571.0], [872.0, 1950.7777777777778], [873.0, 2817.2727272727275], [896.0, 2779.2727272727275], [897.0, 1916.2608695652173], [898.0, 2478.3333333333335], [900.0, 2922.247579167752], [899.0, 3114.8888888888887]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}, {"data": [[639.1977037597776, 2355.2194044915527]], "isOverall": false, "label": "HTTP Request - Reserve-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 900.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5756.05, "minX": 1.67224506E12, "maxY": 1755987.7333333334, "series": [{"data": [[1.67224512E12, 890693.7833333333], [1.67224518E12, 1755987.7333333334], [1.67224506E12, 286315.01666666666], [1.67224524E12, 280269.38333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67224512E12, 18389.616666666665], [1.67224518E12, 36095.28333333333], [1.67224506E12, 5934.883333333333], [1.67224524E12, 5756.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67224524E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 972.3508388037922, "minX": 1.67224506E12, "maxY": 4202.375136552342, "series": [{"data": [[1.67224512E12, 4202.375136552342], [1.67224518E12, 3323.002925621712], [1.67224506E12, 2178.5543766578267], [1.67224524E12, 1607.0027397260253]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[1.67224512E12, 3739.0624285387626], [1.67224518E12, 1933.3466254153811], [1.67224506E12, 2012.0267921795817], [1.67224524E12, 972.3508388037922]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67224524E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 959.9460247994168, "minX": 1.67224506E12, "maxY": 4172.911951059661, "series": [{"data": [[1.67224512E12, 4172.911951059661], [1.67224518E12, 3190.7050748283946], [1.67224506E12, 2167.753978779842], [1.67224524E12, 1256.96506849315]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[1.67224512E12, 3726.2565744340254], [1.67224518E12, 1920.8522974676307], [1.67224506E12, 1999.283128167995], [1.67224524E12, 959.9460247994168]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67224524E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67224506E12, "maxY": 1445.3091031844303, "series": [{"data": [[1.67224512E12, 471.4752020974447], [1.67224518E12, 1445.3091031844303], [1.67224506E12, 261.82228116710934], [1.67224524E12, 694.7849315068495]], "isOverall": false, "label": "HTTP Request - Index", "isController": false}, {"data": [[1.67224512E12, 0.286988337525726], [1.67224518E12, 4.820786066231228], [1.67224506E12, 0.0], [1.67224524E12, 1.2793581327498187]], "isOverall": false, "label": "HTTP Request - Reserve", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67224524E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 223.0, "minX": 1.67224506E12, "maxY": 28795.0, "series": [{"data": [[1.67224512E12, 18136.0], [1.67224518E12, 28795.0], [1.67224506E12, 4364.0], [1.67224524E12, 16711.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67224512E12, 6446.0], [1.67224518E12, 5553.799999999999], [1.67224506E12, 3717.0], [1.67224524E12, 2671.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67224512E12, 8407.56], [1.67224518E12, 16833.030000000002], [1.67224506E12, 4115.2], [1.67224524E12, 10630.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67224512E12, 6816.0], [1.67224518E12, 7178.450000000008], [1.67224506E12, 3877.5], [1.67224524E12, 7600.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67224512E12, 233.0], [1.67224518E12, 227.0], [1.67224506E12, 234.0], [1.67224524E12, 223.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67224512E12, 4138.0], [1.67224518E12, 1917.5], [1.67224506E12, 2082.0], [1.67224524E12, 493.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67224524E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 475.0, "minX": 1.0, "maxY": 24955.0, "series": [{"data": [[3.0, 8712.0], [4.0, 16711.0], [6.0, 493.0], [8.0, 497.5], [20.0, 479.0], [36.0, 499.5], [56.0, 582.5], [59.0, 475.0], [83.0, 749.0], [86.0, 1263.0], [87.0, 2329.5], [84.0, 1924.5], [89.0, 2084.0], [90.0, 1229.5], [91.0, 4671.0], [94.0, 480.5], [95.0, 3270.5], [93.0, 3548.0], [92.0, 5073.0], [97.0, 1943.5], [99.0, 3332.5], [98.0, 3202.0], [96.0, 3712.5], [102.0, 2727.0], [103.0, 2418.0], [101.0, 2936.0], [100.0, 4257.5], [104.0, 4092.0], [105.0, 4288.0], [109.0, 3255.0], [108.0, 3778.0], [112.0, 2765.5], [115.0, 4307.0], [114.0, 4457.0], [118.0, 5355.0], [138.0, 475.0], [152.0, 5341.5], [165.0, 5268.0], [163.0, 4928.5], [170.0, 4187.0], [172.0, 5480.0], [180.0, 4979.0], [177.0, 5476.0], [176.0, 3882.0], [182.0, 516.0], [183.0, 4131.0], [184.0, 4599.5], [185.0, 5466.0], [190.0, 5860.0], [188.0, 1098.0], [197.0, 5304.0], [193.0, 5823.0], [200.0, 3808.0], [214.0, 4022.0], [217.0, 2423.5], [220.0, 4213.0], [222.0, 3124.0], [216.0, 3575.0], [219.0, 3213.0], [230.0, 2954.5], [224.0, 3354.0], [235.0, 855.5], [237.0, 3504.0], [233.0, 3255.0], [234.0, 3293.0], [239.0, 3145.0], [232.0, 493.0], [240.0, 1645.5], [243.0, 3300.0], [247.0, 2870.0], [251.0, 2527.0], [252.0, 1567.0], [265.0, 3103.5], [261.0, 2893.0], [271.0, 1866.5], [280.0, 1965.0], [279.0, 2290.5], [276.0, 1408.5], [286.0, 882.0], [284.0, 498.0], [272.0, 488.5], [291.0, 1115.0], [301.0, 1969.5], [293.0, 1986.0], [297.0, 927.0], [288.0, 1853.0], [290.0, 919.0], [289.0, 1366.0], [300.0, 696.0], [295.0, 593.0], [312.0, 1913.0], [311.0, 2029.0], [308.0, 2237.0], [307.0, 1912.0], [310.0, 1303.0], [318.0, 702.5], [306.0, 1777.0], [319.0, 639.0], [322.0, 883.5], [328.0, 2221.5], [324.0, 1256.0], [320.0, 1402.5], [329.0, 1170.0], [334.0, 942.0], [321.0, 574.0], [325.0, 1302.0], [336.0, 2408.5], [348.0, 994.0], [338.0, 754.5], [341.0, 1254.0], [349.0, 520.0], [365.0, 1417.5], [355.0, 890.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 17399.0], [4.0, 13151.0], [6.0, 13247.0], [138.0, 12995.5], [182.0, 14749.5], [183.0, 9922.0], [214.0, 10923.0], [217.0, 10010.0], [220.0, 15438.0], [216.0, 11130.0], [219.0, 14677.0], [224.0, 19548.0], [235.0, 14362.0], [237.0, 11817.0], [233.0, 9926.5], [234.0, 9930.0], [239.0, 9923.0], [232.0, 17126.0], [251.0, 12644.0], [265.0, 9927.0], [261.0, 10933.0], [271.0, 17349.0], [1.0, 19510.0], [280.0, 17733.0], [279.0, 13038.0], [284.0, 18036.5], [272.0, 12946.0], [288.0, 20520.0], [290.0, 19016.0], [289.0, 13376.0], [301.0, 18979.5], [297.0, 18156.0], [295.0, 9927.0], [291.0, 17927.0], [312.0, 11702.0], [310.0, 12941.0], [306.0, 19282.0], [319.0, 9928.0], [324.0, 9924.5], [334.0, 12938.0], [321.0, 19480.0], [325.0, 18631.5], [348.0, 24955.0], [365.0, 9928.0], [355.0, 9918.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 365.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 16701.0, "series": [{"data": [[3.0, 8701.0], [4.0, 16701.0], [6.0, 484.5], [8.0, 490.0], [20.0, 469.5], [36.0, 488.0], [56.0, 572.0], [59.0, 466.0], [83.0, 739.0], [86.0, 1252.0], [87.0, 2318.0], [84.0, 1913.5], [89.0, 2082.0], [90.0, 1217.5], [91.0, 4663.0], [94.0, 471.0], [95.0, 3264.5], [93.0, 3535.0], [92.0, 5062.0], [97.0, 1931.5], [99.0, 3321.5], [98.0, 3190.5], [96.0, 3699.5], [102.0, 2719.0], [103.0, 2406.0], [101.0, 2920.0], [100.0, 4246.0], [104.0, 4080.5], [105.0, 4274.5], [109.0, 3244.0], [108.0, 3765.0], [112.0, 2751.0], [115.0, 4294.0], [114.0, 4447.0], [118.0, 5345.0], [138.0, 467.5], [152.0, 5330.0], [165.0, 5256.0], [163.0, 4918.5], [170.0, 4175.0], [172.0, 5468.0], [180.0, 4968.0], [177.0, 5461.0], [176.0, 3869.5], [182.0, 507.5], [183.0, 4118.5], [184.0, 4586.5], [185.0, 5451.0], [190.0, 5850.0], [188.0, 1086.0], [197.0, 5292.0], [193.0, 5818.0], [200.0, 3796.0], [214.0, 4011.0], [217.0, 2412.5], [220.0, 4202.0], [222.0, 3115.0], [216.0, 3562.0], [219.0, 3201.0], [230.0, 2942.0], [224.0, 3342.0], [235.0, 849.0], [237.0, 3493.0], [233.0, 3241.0], [234.0, 3283.0], [239.0, 3133.5], [232.0, 482.0], [240.0, 1633.5], [243.0, 3287.0], [247.0, 2858.0], [251.0, 2519.0], [252.0, 1553.5], [265.0, 3089.0], [261.0, 2880.0], [271.0, 1857.0], [280.0, 1952.5], [279.0, 2277.5], [276.0, 1402.0], [286.0, 871.0], [284.0, 486.0], [272.0, 477.5], [291.0, 1104.0], [301.0, 1955.5], [293.0, 1971.0], [297.0, 913.5], [288.0, 1837.0], [290.0, 908.0], [289.0, 1351.0], [300.0, 683.5], [295.0, 583.5], [312.0, 1902.0], [311.0, 2017.0], [308.0, 2223.0], [307.0, 1901.0], [310.0, 1291.0], [318.0, 691.0], [306.0, 1772.0], [319.0, 629.5], [322.0, 872.0], [328.0, 2211.0], [324.0, 1244.5], [320.0, 1388.5], [329.0, 1161.0], [334.0, 931.0], [321.0, 562.0], [325.0, 1291.0], [336.0, 2396.0], [348.0, 983.0], [338.0, 744.5], [341.0, 1242.0], [349.0, 507.0], [365.0, 1405.0], [355.0, 882.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 0.0], [4.0, 0.0], [6.0, 0.0], [138.0, 0.0], [182.0, 0.0], [183.0, 0.0], [214.0, 0.0], [217.0, 0.0], [220.0, 0.0], [216.0, 0.0], [219.0, 0.0], [224.0, 0.0], [235.0, 0.0], [237.0, 0.0], [233.0, 0.0], [234.0, 0.0], [239.0, 0.0], [232.0, 0.0], [251.0, 0.0], [265.0, 0.0], [261.0, 0.0], [271.0, 0.0], [1.0, 0.0], [280.0, 0.0], [279.0, 0.0], [284.0, 0.0], [272.0, 0.0], [288.0, 0.0], [290.0, 0.0], [289.0, 0.0], [301.0, 0.0], [297.0, 0.0], [295.0, 0.0], [291.0, 0.0], [312.0, 0.0], [310.0, 0.0], [306.0, 0.0], [319.0, 0.0], [324.0, 0.0], [334.0, 0.0], [321.0, 0.0], [325.0, 0.0], [348.0, 0.0], [365.0, 0.0], [355.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 365.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.833333333333336, "minX": 1.67224506E12, "maxY": 284.9166666666667, "series": [{"data": [[1.67224512E12, 159.16666666666666], [1.67224518E12, 284.9166666666667], [1.67224506E12, 53.15], [1.67224524E12, 40.833333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67224524E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.67224506E12, "maxY": 292.3333333333333, "series": [{"data": [[1.67224512E12, 149.05], [1.67224518E12, 292.3333333333333], [1.67224506E12, 48.15], [1.67224524E12, 46.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67224512E12, 0.11666666666666667], [1.67224518E12, 1.2333333333333334], [1.67224524E12, 0.5333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67224524E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.67224506E12, "maxY": 146.88333333333333, "series": [{"data": [[1.67224512E12, 76.16666666666667], [1.67224518E12, 146.88333333333333], [1.67224506E12, 25.133333333333333], [1.67224524E12, 23.8]], "isOverall": false, "label": "HTTP Request - Index-success", "isController": false}, {"data": [[1.67224512E12, 72.88333333333334], [1.67224518E12, 145.45], [1.67224506E12, 23.016666666666666], [1.67224524E12, 22.85]], "isOverall": false, "label": "HTTP Request - Reserve-success", "isController": false}, {"data": [[1.67224512E12, 0.11666666666666667], [1.67224518E12, 1.2333333333333334], [1.67224524E12, 0.5333333333333333]], "isOverall": false, "label": "HTTP Request - Index-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67224524E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.67224506E12, "maxY": 292.3333333333333, "series": [{"data": [[1.67224512E12, 149.05], [1.67224518E12, 292.3333333333333], [1.67224506E12, 48.15], [1.67224524E12, 46.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.67224512E12, 0.11666666666666667], [1.67224518E12, 1.2333333333333334], [1.67224524E12, 0.5333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67224524E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

